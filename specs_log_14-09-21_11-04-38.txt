[*] Waiting for automatic taggings
Run options: exclude {:template_test=>true, :slow_test=>true}

Randomized with seed 50625

PageFile
  POST web_api/v1/pages/:page_id/files
    Add a file attachment to a page
    
      [error] Add a file of which the size is too large
    
      [error] Add an unsupported file extension as attachment to a page
  DELETE web_api/v1/pages/:page_id/files/:file_id
    Delete a file attachment from a page
  GET web_api/v1/pages/:page_id/files/:file_id
    Get one file of a page
  GET web_api/v1/pages/:page_id/files
    List all file attachments of a page

IdeaStatus
  when its code is required
    if others exist with this code
      it's code can be updated
      can be destroyed
    if it is the only existing with this code
      cannot be destroyed
      it's code cannot be updated
  when its code is not required
    can be destroyed
  Default factory
    is valid

Project
  participation_method
    can be null for timeline projects
  Factory with topics
    has topics
    is valid
  Factory XL
    has ideas
    is valid
  Default factory
    is valid
  Factory with areas
    has areas
    is valid
  destroy
    can be realised
  comments_count
    remains up to date when an idea changes project
  Project without admin publication
    is invalid
  description sanitizer
    sanitizes script tags in the description

TrackSegmentService
  identify_user
    calls segment's identify() method with the correct payload
  integrations
    doesn't include SatisMeter for a super admin
    doesn't include SatisMeter for a normal user
    includes intercom for an admin
    doesn't include intercom for a super admin
    includes SatisMeter for an admin
    logs to all destinations by default
    doesn't include intercom for a normal user
  track_activity
    generates an event with the desired content for activities about notifications
    generates an event with the desired content for (normal) activities

ParticipationContextService
  commenting_idea_disabled_reason_for_project
    for continuous project
      returns 'commenting_disabled' when commenting is disabled in a continuous project
      returns not_supported when in a survey project
      returns nil when commenting is permitted in a continuous project
      returns 'project_inactive' when the project is archived
    for timeline projects
      returns nil when the commenting is allowed in the current phase
      returns `commenting_disabled` when commenting is disabled in the current phase
      returns 'project_inactive' when the project is archived
      returns 'project_inactive' when the timeline hasn't started
      returns 'idea_not_in_current_phase' for an idea when it's not in the current phase
      returns nil when we're in a participatory budgeting context
      returns 'project_inactive' when the timeline is over
  future_posting_enabled_phase
    returns nil if no next phase has posting enabled
    returns the first upcoming phase that has posting enabled
    returns nil for a project without future phases
    returns nil for a continuous project
  cancelling_votes_disabled_reasons
    timeline project
      returns `idea_not_in_current_phase` when it's not in the current phase
      returns 'project_inactive' when the timeline has past
      returns nil when voting is enabled in the current phase
      returns 'voting_disabled' if it's in the current phase and voting is disabled
      returns `not_ideation` when we're in a participatory budgeting context
    continuous project
      returns 'voting_disabled' if voting is disabled
      returns nil when voting is enabled in the current project with unlimited voting
      returns 'project_inactive' when the project is archived
  voting_disabled_reasons
    timeline project
      returns `idea_not_in_current_phase` when it's not in the current phase
      returns nil when voting is enabled in the current phase with unlimited voting
      returns 'voting_disabled' if it's in the current phase and voting is disabled
      returns `not_ideation` when we're in a participatory budgeting context
      returns `voting_limited_max_reached` when it's in the current phase and the user reached his limit
      returns 'project_inactive' when the timeline has past
    continuous project
      for a normal user
        returns 'project_inactive' when the project is archived
        returns 'voting_limited_max_reached' when the user reached his limit
        returns nil when voting is enabled in the current project with unlimited voting
        returns 'voting_disabled' if voting is disabled
  budgeting_disabled_reasons
    for timeline projects
      returns nil when the idea is in the current phase and budgeting is allowed
      returns 'project_inactive' when the timeline is over
      returns 'idea_not_in_current_phase' when the idea is not in the current phase, budgeting is permitted but was not permitted in the last phase the idea was part of
      returns `idea_not_in_current_phase` when the idea is not in the current phase, budgeting is allowed in the current phase and was allowed in the last phase the idea was part of
    continuous project
      returns 'project_inactive' when the project is archived
      returns nil when budgeting is permitted in a continuous project
  taking_poll_disabled_reason
    returns `project_inactive` when the timeline has past
    returns `not_poll` when the active context is not a poll
    returns `already_responded` when the user already responded to the poll before
    returns `project_inactive` when the continuous project is archived
  future_commenting_enabled_phase
    returns nil for a continuous project
    returns the first upcoming phase that has commenting enabled
    returns nil for a project without future phases
    returns nil if no next phase has commenting enabled
  taking_survey_disabled_reason
    returns `project_inactive` when the timeline has past
    returns `not_survey` when the active context is not a survey
    returns `project_inactive` when the continuous project is archived
  posting_idea_disabled_reason_for_project
    returns `not_ideation` when we're in a participatory budgeting context
    returns `posting_disabled` when posting is disabled
    returns `not_ideation` when we're not in an ideation context
    returns 'project_inactive' when the project is archived
    returns `project_inactive` when the timeline is over
  get_participation_context
    returns nil for a timeline project without an active phase
    returns nil for a timeline project that's archived
    returns the active phase for a timeline project
    returns nil for a continuous project that's archived
    returns the project for a continuous project
  future_voting_enabled_phase
    returns nil if no next phase has voting enabled
    returns the first upcoming phase that has voting enabled
    returns nil for a project without future phases
    returns nil for a continuous project

Idea Custom Fields
  GET web_api/v1/projects/:project_id/custom_fields/schema
    Get the json schema and ui schema for the custom fields

AdminPublication
  #depth
    sets depth of 0 by default
    sets depth of 1 to a direct child
  create(:admin_publication)
    is valid
  #children_allowed?
    is true by default for a publication that is not a project
    does not allow the creation of children for a project admin publication
    allows the creation of children for a non project admin publication
    is false for a project

InitiativeFile
  GET web_api/v1/initiatives/:initiative_id/files
    List all file attachments of an initiative
  POST web_api/v1/initiatives/:initiative_id/files
    Add a file attachment to an initiative
  DELETE web_api/v1/initiatives/:initiative_id/files/:file_id
    Delete a file attachment from an initiative
  GET web_api/v1/initiatives/:initiative_id/files/:file_id
    Get one file attachment of an initiative by id

LogActivityJob
  #perform
    logs a notification activity with the notification's subclass item_type
    logs an activity with a GlobalID
    enqueues a EmailCampaigns::TriggerOnActivityJob
    doesn't enqueue a TrackEventJob when the item is a notification
    enqueues a MakeNotificationsForClassJob when there's a matching notification
    logs an activity with a composed deleted resource
    logs an activity when the user is nil
    enqueues a PublishActivityToRabbitJob when bunny is initialized
    enqueues a TrackEventJob when Analytics is initialized

SpamReport
  Default factory
    is valid

Avatars
  GET web_api/v1/avatars/:id
    
      Get a single avatar
  GET web_api/v1/avatars
    List random user avatars
    as an admin
      
        List random user avatars in a group as an admin
    
      List random user avatars on an initiative (author and commenters)
    
      List random user avatars on an idea (author and commenters)
    
      List random user avatars in a project

CustomFieldService
  fields_to_json_schema_multiloc
    creates localized schemas with titles and descriptions for all languages
  fields_to_ui_schema
    creates a valid ui schema with all input types
  fields_to_json_schema
    properly handles the custom behaviour of the domicile field
    it creates a valid schema for the built in idea custom fields
    creates the valid empty schema on a disabled field
    creates a valid schema with all input types
    properly handles the custom behaviour of the birthyear field
    creates the valid empty schema on empty fields
  keyify
    throws out non-valid chars

GroupPolicy
  on normal group
    for a mortal user
      is expected not to permit :update
      is expected not to permit :show
      should not index the group
      is expected not to permit :create
      is expected not to permit :destroy
    for an admin
      should index the group
      is expected to permit :create
      is expected to permit :update
      is expected to permit :destroy
      is expected to permit :show
    for a visitor
      is expected not to permit :update
      is expected not to permit :destroy
      is expected not to permit :show
      is expected not to permit :create
      should not index the group

ProjectFilePolicy
  on a file in a private admins project
    for an admin
      is expected to permit :show
      is expected to permit :update
      is expected to permit :create
      should index the file
      is expected to permit :destroy
    for a user
      should not index the file
      is expected not to permit :show
      is expected not to permit :create
      is expected not to permit :destroy
      is expected not to permit :update
  on a file in a public project
    for a mortal user
      is expected not to permit :create
      should index the file
      is expected to permit :show
      is expected not to permit :update
      is expected not to permit :destroy
    for an admin
      is expected to permit :update
      should index the file
      is expected to permit :create
      is expected to permit :show
      is expected to permit :destroy
    for a visitor
      is expected not to permit :create
      should index the file
      is expected not to permit :update
      is expected to permit :show
      is expected not to permit :destroy

Activities
  GET web_api/v1/ideas/:idea_id/activities
    List all activities

InitiativeFile
  file upload
    should accept valid files

Spam Reports
  POST web_api/v1/initiatives/:initiative_id/spam_reports
    Create a spam report for an initiative
  GET web_api/v1/initiatives/:initiative_id/spam_reports
    List all spam reports of an initiative
  DELETE web_api/v1/spam_reports/:id
    Delete a spam report from an initiative
  GET web_api/v1/spam_reports/:id
    Get one spam report of an initiative by id
  PATCH web_api/v1/spam_reports/:id
    Update a spam report for an initiative

AdminPublication
  when citizen
    GET web_api/v1/admin_publications
      Visible children count should take account with applied filters
      Listed admin publications have correct visible children count
      Returns an empty list success response when there are no publications
  when admin
    GET web_api/v1/admin_publications/:id
      Get one admin publication by id
    GET web_api/v1/admin_publications
      List all top-level admin publications
      List all draft or archived admin publications
      List all admin publications in a folder
      List all admin publications
      List all admin publications with a topic
      List all admin publications with the specified areas (i.e. given an array of areas); always includes folders; returns all publications by default;
    PATCH web_api/v1/admin_publications/:id/reorder
      Reorder an admin publication

UpdateMemberCountJob
  #perform
    updates the given group with argument
    updates all groups without argument

SideFxAreaService
  before_destroy
    destroys custom field option values for domicile that refer to this area
  after_update
    logs a 'changed' action job when the area has changed
  after_destroy
    logs a 'deleted' action job when the area is destroyed
  after_create
    logs a 'created' action when a area is created

Finders
  add some scenarios (or delete) /cl2_back/spec/generator/finders_generator_spec.rb (PENDING: Not yet implemented)

CitizenLab
  .root
    returns the root path of the app

XlsxService
  escape_formula
    retains normal text
    escapes formula injections
  xlsx_to_hash_array
    correctly converts an xlsx to a hash array
  generate_initiatives_xlsx
    contains a row for every initiative
    exports a valid excel file
    
      hides private attributes
  generate_users_xlsx
    contains a row for every user
    exports a valid excel file
    contains extra columns for custom user fields
    
      hides private attributes
  generate_ideas_xlsx
    exports a valid excel file
    contains a row for every idea
    
      hides private attributes
  generate_initiative_comments_xlsx
    exports a valid excel file and contains a row for every comment
    
      hides private attributes
  hash_to_xlsx
    correctly converts a hash array to a xlsx stream
  generate_invites_xlsx
    exports a valid excel file
    contains a row for every invite
    
      hides private attributes
  generate_idea_comments_xlsx
    contains a row for every comment
    exports a valid excel file
    
      hides private attributes

Stats - Votes
  GET web_api/v1/stats/votes_by_project
    with time filtering only
      Votes by project
    filtered by group
      Votes by project filtered by group
    filtered by topic
      Votes by project filtered by topic
  GET web_api/v1/stats/votes_by_project_as_xlsx
    filtered by topic
      Votes by project filtered by topic
    filtered by group
      Votes by project filtered by group
    with time filtering only
      Votes by project
  GET web_api/v1/stats/votes_by_topic
    filtered by project
      Votes by topic filtered by project
    filtered by group
      Votes by topic filtered by group
    with time filtering only
      Votes by topic
  with dependency on custom_fields
    GET web_api/v1/stats/votes_by_custom_field
      Votes by custom field
    GET web_api/v1/stats/votes_by_gender
      Votes by gender
    GET web_api/v1/stats/votes_by_birthyear
      Votes by birthyear
    GET web_api/v1/stats/votes_by_education
      Votes by education
    GET web_api/v1/stats/votes_by_domicile
      Votes by domicile
  by time
    GET web_api/v1/stats/votes_by_time_as_xlsx
      filtered by time outside of the tenant lifecycle
        returns no results
      filtered by time
        Votes by time
    GET web_api/v1/stats/votes_by_time
      filtered by time outside of the tenant lifecycle
        returns no results
      filtered by time
        Votes by time
    GET web_api/v1/stats/votes_by_time_cumulative
      Votes by time (cumulative)
  GET web_api/v1/stats/votes_count
    Count all votes
  GET web_api/v1/stats/votes_by_topic_as_xlsx
    with time filtering only
      Votes by topic
    filtered by project
      Votes by topic filtered by project
    filtered by group
      Votes by topic filtered by group

ProfanityService
  search_blocked_words
    doesn't match on accents or digits
    matches with HTML
    matches exact occurences
    returns matches for multilple languages
    matches case-insensitively
    returns no matches when there are no occurences

OfficialFeedback
  when authenticated
    POST web_api/v1/initiatives/:initiative_id/official_feedback
      Create an official feedback on an initiative
      
        [error] Create an invalid official feedback on an initiative
    PATCH web_api/v1/official_feedback/:id
      Update an official feedback for an initiative
    DELETE web_api/v1/official_feedback/:id
      Delete an official feedback from an initiative
  GET web_api/v1/initiatives/:initiative_id/official_feedback
    List all official feedback of an initiative
  when authenticated as normal user
    POST web_api/v1/initiatives/:initiative_id/official_feedback
      [error] Create an official feedback on an initiative
  GET web_api/v1/official_feedback/:id
    Get one official feedback on an initiative by id

Phases
  GET web_api/v1/phases/:id
    Get one phase by id
  GET web_api/v1/projects/:project_id/phases
    List all phases of a project
  when authenticated
    DELETE web_api/v1/phases/:id
      Delete a phase
    PATCH web_api/v1/phases/:id
      Update a phase
      
        Make a phase with ideas an information phase
    POST web_api/v1/projects/:project_id/phases
      Create a phase for a project
      
        [error] Create an invalid phase
      
        [error] Create an overlapping phase
      
        [error] Create multiple budgeting phases
      
        [error] Create a phase with text image without start and end date
        Create a phase with text image
      
        Create a participatory budgeting phase
      
        Create a survey phase

TrackEventJob
  when there is no AppConfiguration
    does not raise a ActiveRecord::RecordNotFound

SideFxUserService
  before_create
    doesn't set registration_completed_at if there's a custom fields
    set registration_completed_at if there's no user custom fields and the user is not invited
  after_update
    logs a UpdateMemberCountJob
    logs a 'admin_rights_given' action job when user has been made admin
    logs a 'completed_registration' action job when the registration is set
    logs a 'changed_avatar' action job when the avatar has changed
  after_create
    generates an avatar after a user is created
    creates an unsubscription_token
    identifies the user with segment after a user is created
    logs a UpdateMemberCountJob
    logs a 'created' action when a user is created
  after_destroy
    logs a UpdateMemberCountJob
    logs a 'deleted' action job when the user is destroyed

Comments
  GET web_api/v1/users/:user_id/comments
    
      List the comments of a user

WebApi::V1::CustomFieldSerializer
  Idea custom fields
    should not contain the attribute 'hidden'
  User custom fields
    should contain the attribute 'hidden'

InvitesService
  bulk_create_xlsx
    with send_invite_email set to false
      sets send_invite_email attribute to false in the invite
    when email has trailing spaces
      trims the spaces
    with custom field that has the wrong type
      raises 'InviteError' errors
    with an invalid email field
      fails with invalid_email error
    with no invites specified
      fails with no_invites_specified error
    with send_invite_email set to true
      sets send_invite_email attribute to true in the invite
    when email has leading spaces
      trims the spaces
    with an unknown language value
      fails with unknown_locale error
    with user custom fields configured
      initializes custom_field_values with matching column names and appropriate types
    with an email that is already invited
      doesn't send out invitations to the invited users
    with duplicate first and last names
      succeeds with unique slugs
    with a malformed admin field
      fails with malformed_admin_value error
    with a malformed groups field
      fails with malformed_groups_value error
    with send_invite_email missing
      sets send_invite_email attribute to true in the invite
    with an email that is already used by an active user (case insensitive)
      doesn't send out invitations to the existing users
    with a reference to a non-existing group
      fails with unknown_group error
    with duplicate emails
      fails with email_duplicate error
    
      correctly creates invites when all is fine
    with file that exceeds maximum supported number of invites
      fails with max_invites_limit_exceeded error

Page
  Default factory
    is valid

Notifications
  POST web_api/v1/notifications/mark_all_read
    Mark all notifications as read
  GET web_api/v1/notifications
    List all unread notifications
    List all notifications
    
      List all different types of notification
  POST web_api/v1/notifications/:id/mark_read
    Mark one notifications as read
  GET web_api/v1/notifications/:id
    Get one notification by id

TimelineService
  current_and_future_phases
    respects the tenant timezone
    returns an array of current and future phases
  current_phase
    returns the active phase when we're in the first day of the phase
    returns an active phase of the project
    respects the tenant timezone
    returns the active phase when we're in the last day of the phase
  timeline_active
    returns :present for a project with current phase
    returns :present for a continuous project
    returns :past for a project with only past phases
    respects the tenant timezone
    returns :future for a project with only future phases
  is_in_active_phase?
    returns falsy when the given idea is not in the active phase
    returns truthy when the given idea is in the active phase

InitiativeStatusService
  #automated_transitions!
    remains proposed if not expired nor threshold reached
    transitions when expired
    transitions when voting threshold was reached
  transition_type
    labels the ineligible status as manual
    labels the threshold_reached status as automatic

Areas
  when admin
    PATCH web_api/v1/areas/:id
      Update an area
    POST web_api/v1/areas
      Create an area
    DELETE web_api/v1/areas/:id
      Delete an area
      Deleting an area that's still referenced in a user's setting
    PATCH web_api/v1/areas/:id/reorder
      Reorder an Area
  GET web_api/v1/areas
    List all areas
  GET web_api/v1/areas/:id
    Get one area by id

CustomField
  description sanitizer
    does not sanitize allowed tags in the description
    sanitizes script tags in the description
  hooks
    generates a key on creation, if not specified
    generates unique keys in the resource_type scope, if not specified

Comment
  body sanitizer
    sanitizes script tags in the body
  Default factory
    is valid
  counters
    increments the comments_count in project and idea for a new published comment
    decrements the comments_count in project and idea for a deleted comment
    support bulk counter fixing
    decrements the comments_count in project and idea for a destroyed comment

Phase
  ::starting_on
    when there are 3 phases that belong to published publications
      returns only the phases that belong to published publications
      returns no phases if the date is tomorrow
  project validation
    fails when the associated project has overlapping phases
    fails when the associated project is not a timeline project
    succeeds when the associated project is a timeline project
  max_budget
    can be updated in a project with just one phase
  presentation_mode
    cannot be null for an ideation phase
    can be null for non-ideation phases
  description sanitizer
    sanitizes script tags in the description
  Default factory
    is valid
  ::published
    when there are 3 phases that belong to published publications
      returns only the phases that belong to published publications
  participation_method
    cannot be null
  #ends_before?
    returns false if passing today's date
    returns true if passing tomorrow's date
  timing validation
    fails when end_at is before start_at
    succeeds when start_at and end_at are equal

UserPolicy
  for a user
    on theirself
      is expected to permit :destroy
      is expected not to permit :index
      is expected not to permit :index_xlsx
      is expected to permit :show
      should index the user through the scope
      is expected to permit :update
      is expected to permit :create
    on someone else
      should index the users through the scope
      is expected to permit :create
      is expected to permit :show
      is expected not to permit :index_xlsx
      is expected not to permit :update
      is expected not to permit :index
      is expected not to permit :destroy
  for an admin
    on theirself
      is expected to permit :destroy
      is expected to permit :index
      is expected to permit :update
      should index the user through the scope
      is expected to permit :index_xlsx
      is expected to permit :show
      is expected to permit :create
    on someone else
      is expected to permit :create
      is expected to permit :index_xlsx
      is expected to permit :show
      should index the users through the scope
      is expected to permit :update
      is expected to permit :index
      is expected to permit :destroy
  for a visitor
    is expected not to permit :destroy
    is expected not to permit :update
    is expected not to permit :index_xlsx
    is expected not to permit :index
    should index the user through the scope
    is expected to permit :show
    is expected to permit :create

OfficialFeedback
  when the current user is an admin
    DELETE web_api/v1/official_feedback/:id
      Delete an official feedback from an idea
    POST web_api/v1/ideas/:idea_id/official_feedback
      Create an official feedback on an idea
      
        [error] Create an invalid official feedback on an idea
    PATCH web_api/v1/official_feedback/:id
      Update an official feedback for an idea
  when authenticated as normal user
    POST web_api/v1/ideas/:idea_id/official_feedback
      [error] Create an official feedback on an idea
  GET web_api/v1/ideas/:idea_id/official_feedback
    List all official feedback of an idea
  when the current user is a moderator
    POST web_api/v1/ideas/:idea_id/official_feedback
      Create an official feedback on an idea
      
        [error] Create an invalid official feedback on an idea
    DELETE web_api/v1/official_feedback/:id
      Delete an official feedback from an idea
    PATCH web_api/v1/official_feedback/:id
      Update an official feedback for an idea
  GET web_api/v1/official_feedback/:id
    Get one official feedback on an idea by id

Initiatives
  GET web_api/v1/initiatives/:id/allowed_transitions
    Allowed transitions
  GET web_api/v1/initiatives/as_markers
    List all markers within a bounding box
  PATCH web_api/v1/initiatives/:id
    Change the publication status
  GET web_api/v1/initiatives/:id
    Get one initiative by id
  GET web_api/v1/initiatives/by_slug/:slug
    Get one initiative by slug
    
      [error] Get an unexisting initiative
  DELETE web_api/v1/initiatives/:id
    Delete an initiative
  POST web_api/v1/initiatives
    
      [error] Create an initiative with blocked words
    
      Check for the automatic assignement of the default assignee
      Create an initiative
      Check for the automatic creation of an upvote by the author when an initiative is created
    with granular permissions
      Create an initiative (group permission)
      [error] Not authorized to create an initiative
    
      [error] Create an initiative with too long title
  GET web_api/v1/initiatives/filter_counts
    List initiative counts per filter option on topic
    List initiative counts per filter option on area
    List initiative counts per filter option
  GET web_api/v1/initiatives
    Don't list drafts (default behaviour)
    List all initiatives that need feedback
    List all initiatives for a user
    List all published initiatives (default behaviour)
    List all initiatives by random ordering
    List all initiatives includes the user_vote
    List all initiatives sorted by new
    List all initiatives which match one of the given areas
    List all initiatives which match one of the given topics
    Search for initiatives
    List all initiatives for an assignee
    List all initiatives for an initiative status
  GET web_api/v1/initiatives/as_xlsx
    XLSX export
    
      XLSX export by initiative ids
    
      [error] XLSX export by a normal user
  PATCH web_api/v1/initiatives/:id
    
      The header image can be removed
    
      Changing the assignee as a non-admin does not work
    
      Update an initiative
      Check for the automatic creation of an upvote by the author when the publication status of an initiative is updated from draft to published
    
      The header image can be updated and the file is present
    
      Remove the topics/areas

Vote
  uniquness
    can't create 2 votes for the same votable and user
    two votes of deleted users are allowed
  associations
    is expected to belong to votable
    is expected to belong to user
  Default factory
    is valid

Event
  Default factory
    is valid
  description sanitizer
    sanitizes script tags in the description
    retains paragraphs and line breaks in the description
  timing validation
    fails when end_at is before start_at
    succeeds when start_at and end_at are equal

Spam Reports
  GET web_api/v1/ideas/:idea_id/spam_reports
    List all spam reports of an idea
  GET web_api/v1/spam_reports/:id
    Get one spam report of an idea by id
  DELETE web_api/v1/spam_reports/:id
    Delete a spam report from an idea
  PATCH web_api/v1/spam_reports/:id
    Update a spam report for an idea
  POST web_api/v1/ideas/:idea_id/spam_reports
    Create a spam report for an idea

Notifications::CommentOnYourComment
  make_notifications_on
    makes a notification on created comment activity

ParticipantsService
  idea_statuses_participants
    returns participants of given idea statuses
    returns only participants for specific actions
  with_engagement_scores
    allows adding other select fields to the query
    gives idea voting a score of 1
    gives idea publishing a score of 5
    gives comment voting a score of 1
    returns 0 for non-engaging activities
    gives comment creation a score of 3
  filter_engaging_activities
    does not filter out an upvote
    filters out an idea changed title activity
  participants
    returns participants across the whole platform since a given date
    returns participants across the whole platform at any time
  topics_participants
    returns only participants for specific actions
    returns participants of given topics
  projects_participants
    returns only participants for specific actions
    returns participants of a poll
    returns participants of a given project since a given date
    returns participants of a given project at any time
    returns volunteering participants

SlugService
  generate_slugs
    generates unique slugs when one existing user already has the slug
    generates unique slugs for unpersisted users with the same names
    generates unique slugs when existing users already have the slug
  slugify
    converts uppercase to lowercase
    replaces underscores with dashes
    retains all non-latin characters if there's no normal latin characters
    replaces spaces with dashes
    retains normal latin chars and numbers
    removes accents on latin characters when there's at least one normal latin character
    ignores prefix or postfix whitespace

IdeaCustomFieldsService
  all_fields
    outputs valid custom fields
    takes the order of the built-in fields

Notifications::MentionInComment
  make_notifications_on
    makes a notification on mentioned comment activity

AdminPublicationsFilteringService
  when an admin searching from the admin dashboard
    includes all publications
  when a normal user searching from the landing page (passing params as strings)
    includes a parent even if it's children are in draft
    does not include the draft children of a published parent
    does not include empty draft parents
    includes truly empty parents
    does not include other top-level draft publications
    includes other top-level published publications
    does not include parents when the user has no access to it's children
  when a normal user searching from the landing page (passing parsed params)
    does not include the draft children of a published parent
    does not include parents when the user has no access to it's children
    does not include empty draft parents
    does not include other top-level draft publications
    includes other top-level published publications
    includes a parent even if it's children are in draft
    includes truly empty parents

IdeaCommentPolicy
  for a visitor on a comment on an idea in a private groups project
    is expected not to permit :update
    is expected not to permit :destroy
    does not index the comment
    is expected not to permit :create
    is expected not to permit :show
  for a user on a comment on an idea in a private groups project where she's a member of a manual group with access
    is expected not to permit :destroy
    is expected to permit :show
    indexes the comment
    is expected to permit :update
    is expected to permit :create
  for a user on a comment on an idea in a private groups project where she's not member of a manual group with access
    is expected not to permit :destroy
    is expected not to permit :create
    does not index the comment
    is expected not to permit :update
    is expected not to permit :show
  on comment on idea in a public project
    for a visitor
      is expected not to permit :create
      indexes the comment
      is expected not to permit :destroy
      is expected to permit :show
      is expected not to permit :update
    for a user who is not the author of the comment
      is expected not to permit :create
      is expected not to permit :destroy
      is expected not to permit :update
      indexes the comment
      is expected to permit :show
    for a user who is the author of the comment
      is expected not to permit :destroy
      indexes the comment
      is expected to permit :update
      is expected to permit :show
      is expected to permit :create
    for an admin
      is expected to permit :show
      is expected not to permit :destroy
      is expected to permit :create
      indexes the comment
      is expected to permit :update

Spam Reports
  GET web_api/v1/comments/:comment_id/spam_reports
    List all spam reports of a comment
  POST web_api/v1/comments/:comment_id/spam_reports
    Create a spam report for a comment
  DELETE web_api/v1/spam_reports/:id
    Delete a spam report from a comment
  PATCH web_api/v1/spam_reports/:id
    Update a spam report for a comment
  GET web_api/v1/spam_reports/:id
    Get one spam report of a comment by id

GenerateUserAvatarJob
  #perform
    retrieves and stores an avatar when the user has a gravatar for his email address

Callable::Test::ComplexService
  ::test
    succeeds
    returns a result object
  ChildService
    succeeds
    returns a result inherited from the parent
  FailureService
    fails
    returns an error object

TextImage
  Default factory
    is valid

IdeasFinder
  #publication_status_condition
    is successful
    returns the correct records
  #project_publication_status_condition
    returns the correct records
    is successful
  #project_condition
    is successful
    returns the correct records
  #filter_trending_condition
    returns the correct records
    is successful
  when no params or options are received
    is successful
    returns all
  #projects_condition
    is successful
    returns the correct records
  #idea_status_condition
    is successful
    returns the correct records
  #phase_condition
    returns the correct records
    is successful
  when passing a sort param
    #sortable_attributes (baskets_count)
      returns the sorted records
      is successful
    #sort_scopes (random)
      returns the sorted records
      is successful
    #sort_scopes (trending)
      returns the sorted records
      is successful
    #sortable_attributes (-baskets_count)
      is successful
      returns the sorted records
    #sort_scopes (new)
      returns the sorted records
      is successful
    #sortable_attributes (-upvotes_count)
      returns the sorted records
      is successful
    #sortable_attributes (-downvotes_count)
      returns the sorted records
      is successful
    #sortable_attributes (upvotes_count)
      returns the sorted records
      is successful
    #sort_scopes (-trending)
      is successful
      returns the sorted records
    #sort_scopes (popular)
      returns the sorted records
      is successful
    #sortable_attributes (downvotes_count)
      is successful
      returns the sorted records
    #sort_scopes (-new)
      is successful
      returns the sorted records
    #sort_scopes (-author_name)
      when joining author
        returns the sorted records
        is successful
      when not joining author
        is a failure
    #sort_scopes (-popular)
      returns the sorted records
      is successful
    #sort_scopes (-status)
      is successful
      returns the sorted records
    #sort_scopes (status)
      is successful
      returns the sorted records
    #sort_scopes (author_name)
      when not joining author
        is a failure
      when joining author
        is successful
        returns the sorted records
  #search_condition
    is successful
    returns the correct records
  #areas_condition
    returns the correct records
    is successful
  #topics_condition
    returns the correct records
    is successful
  #bounding_box_condition
    returns the correct records
    is successful
  #author_condition
    returns the correct records
    is successful
  #feedback_needed_condition
    is successful
    returns the correct records

UserCustomFieldService
  delete_custom_field_values
    deletes the custom field values from all users
  delete_custom_field_option_values
    deletes the custom field option values from all users for a multiselect
    deletes the custom field option values from all users for a single select

ProjectPolicy
  for a visitor on a private groups project
    is expected not to permit :update
    is expected not to permit :create
    is expected not to permit :reorder
    is expected not to permit :destroy
    should not index the project
    is expected not to permit :show
  for a user on a private groups project where she's a member of a manual group with access
    should include the user in the users that have access
    should index the project
    is expected not to permit :reorder
    is expected not to permit :destroy
    is expected not to permit :update
    is expected to permit :show
    is expected not to permit :create
  on a public project
    for a user
      is expected not to permit :reorder
      is expected to permit :show
      is expected not to permit :update
      is expected not to permit :create
      should index the project
      should include the user in the users that have access
      is expected not to permit :destroy
    for an admin
      is expected to permit :create
      is expected to permit :destroy
      should include the user in the users that have access
      is expected to permit :reorder
      is expected to permit :update
      is expected to permit :show
      should index the project
    for a visitor
      is expected not to permit :update
      is expected not to permit :create
      is expected not to permit :reorder
      should index the project
      is expected to permit :show
      is expected not to permit :destroy
  on a draft project
    for an admin
      is expected to permit :reorder
      is expected to permit :destroy
      should index the project
      is expected to permit :show
      is expected to permit :create
      should include the user in the users that have access
      is expected to permit :update
    for a user
      is expected not to permit :update
      is expected not to permit :create
      is expected not to permit :show
      is expected not to permit :reorder
      is expected not to permit :destroy
      should not include the user in the users that have access
      should not index the project
    for a visitor
      is expected not to permit :update
      is expected not to permit :destroy
      should not index the project
      is expected not to permit :show
      is expected not to permit :reorder
      is expected not to permit :create
  for a user on a private groups project where she's no member of a manual group with access
    is expected not to permit :reorder
    is expected not to permit :update
    is expected not to permit :destroy
    should not index the project
    is expected not to permit :create
    is expected not to permit :show
    should not include the user in the users that have access
  on a private admins project
    for an admin
      is expected to permit :update
      is expected to permit :show
      is expected to permit :create
      should include the user in the users that have access
      should index the project
      is expected to permit :destroy
      is expected to permit :reorder
    for a user
      should not index the project
      is expected not to permit :create
      should not include the user in the users that have access
      is expected not to permit :show
      is expected not to permit :update
      is expected not to permit :reorder
      is expected not to permit :destroy
    for a visitor
      is expected not to permit :show
      is expected not to permit :update
      is expected not to permit :create
      is expected not to permit :reorder
      should not index the project
      is expected not to permit :destroy
  for an admin on a private groups project
    is expected to permit :create
    is expected to permit :reorder
    is expected to permit :destroy
    is expected to permit :update
    should index the project
    is expected to permit :show
    should include the user in the users that have access

Basket
  a basket exceeding the maximum budget
    is valid in normal context
    is not valid in submission context
  an idea without a budget
    cannot be added to a basket
  Default factory
    is valid
  baskets_ideas
    preserve created_at upon update

Notifications::OfficialFeedbackOnVotedIdea
  make_notifications_on
    generates exactly one notification for each user that voted on the idea
    doesn't generate (invalid) notifications for votes attributed to a deleted user
    doesn't generate notifications for commenters
    doesn't generate notifications for the idea author

SideFxCommentService
  after_update
    logs a 'mentioned' action for every added mention
    logs a 'changed' action job when the comment has changed
  after_destroy
    logs a 'deleted' action job when the comment is destroyed
  after_create
    logs a 'created' action when a comment is created
    logs a 'mentioned' action for every expanded mention

SanitizationService
  linkify
    transforms an email to a mailto: anchor
    transforms plain-text links with one domain segment
    transforms a plan-text link to an anchor
    doesn't transforms an existing anchor
  remove_empty_trailing_tags
    doesn't delete trailing iframes wrapped in p
    deletes empty structure tags that only contain line breaks at the end
    doesn't delete trailing images
    doesn't delete images in the last line of content
    deletes zero width spaces from the html
    doesn't delete empty nested tags with trailing content
    deletes empty structure tag at the end
    deletes empty spaces in nested empty tags if they're last
    deletes empty structure tags at the end
    doesn't delete trailing iframes
    doesn't delete empty structure tags at the start
    doesn't delete trailing images with complex base64 strings
    doesn't delete non-empty structure tags at the end
    deletes structure tag that only contain line breaks at the end
    doesn't modify invalid html
    only removes one of the tags div, p, h2, h3, ol and ul
    doesn't delete empty structure tags in between
    replaces non-breaking spaces in the html
  sanitize
    allows decoration to pass through when decoration feature is enabled
    allows lists to pass through when list feature is enabled
    allows links to pass through when link feature is enabled
    disallows malicious urls iframe to pass through when video feature is enabled
    disallows malicious urls iframe to pass through when video feature is enabled
    disallows images to pass through when image feature is disabled
    allows alignment to pass through when alignment feature is enabled
    disallows unknown url iframe to pass through when video feature is enabled
    allows titles to pass through when title feature is enabled
    fixes links blank target and referrer allowed (PENDING: No reason given)
    allows vimeo iframe to pass through when video feature is enabled
    always allows paragraphs and breaks to pass through
    allows vimeo iframe to pass through when video feature is enabled
    sanitizes malicious javascript
    allows images to pass through when title feature is enabled
    allows wistia iframe to pass through when video feature is enabled
    allows youtube video to pass through when video feature is enabled
    sanitizes invalid elements within invalid elements
    allows dailymotion iframe to pass through when video feature is enabled

TextImageService
  render_data_images
    gets all text images in one querry
    adds a src attribute to an img tag
  swap_data_images
    replaces a base64 JPEG data src on an img with a URL
    retains all other attributes on the img tag
    does not replace an image tag of an image that has already been processed
    replaces the src attribute of an img tag by a new text reference
    replaces a base64 GIF data src on an img with a URL
    does not modify the empty string
    does not modify HTML that contains no images
    does not modify invalid HTML
    replaces a base64 PNG data src on an img
    creates TextImage objects
    removes the src attribute of an img that that already has the text reference attribute
    returns exactly the same input languages
    replaces multiple img tags in one text

IdeaPolicy
  on idea for a project of which the last phase has ended
    for the author
      is expected to raise Pundit::NotAuthorizedError
      is expected not to permit :destroy
      is expected not to permit :update
      is expected to permit :show
      indexes the idea
    for an admin
      is expected to permit :update
      is expected to permit :show
      is expected to permit :destroy
      indexes the idea
      is expected to permit :create
    for a visitor
      does not index the idea
      is expected not to permit :destroy
      is expected not to permit :update
      is expected to permit :show
      is expected to raise Pundit::NotAuthorizedError
  for a user on an idea in a private groups project where she's a member of a manual group with access
    is expected not to permit :destroy
    indexes the idea
    is expected not to permit :update
    is expected to raise Pundit::NotAuthorizedError
    is expected to permit :show
  for an admin on an idea in a private groups project
    is expected to permit :update
    is expected to permit :show
    indexes the idea
    is expected to permit :destroy
    is expected to permit :create
  on idea for a survey project
    for the author
      is expected not to permit :destroy
      is expected to raise Pundit::NotAuthorizedError
      is expected not to permit :update
      is expected to permit :show
      indexes the idea
    for a visitor
      is expected not to permit :destroy
      is expected not to permit :update
      is expected to raise Pundit::NotAuthorizedError
      is expected to permit :show
      does not index the idea
    for an admin
      is expected to permit :destroy
      is expected to permit :create
      is expected to permit :show
      indexes the idea
      is expected to permit :update
  for a visitor on an idea in a private groups project
    does not index the idea
    is expected not to permit :destroy
    is expected not to permit :update
    is expected to raise Pundit::NotAuthorizedError
    is expected not to permit :show
  on idea in a draft project
    for an admin
      is expected to permit :update
      indexes the idea
      is expected to permit :show
      is expected to permit :destroy
      is expected to permit :create
    for a visitor
      is expected not to permit :destroy
      is expected to raise Pundit::NotAuthorizedError
      is expected not to permit :update
      does not index the idea
      is expected not to permit :show
    for a user
      does not index the idea
      is expected not to permit :update
      is expected not to permit :show
      is expected to raise Pundit::NotAuthorizedError
      is expected not to permit :destroy
  on idea in a private admins project
    for a user
      is expected not to permit :update
      does not index the idea
      is expected not to permit :destroy
      is expected to raise Pundit::NotAuthorizedError
      is expected not to permit :show
    for a visitor
      is expected not to permit :update
      is expected to raise Pundit::NotAuthorizedError
      does not index the idea
      is expected not to permit :show
      is expected not to permit :destroy
    for an admin
      is expected to permit :destroy
      indexes the idea
      is expected to permit :show
      is expected to permit :create
      is expected to permit :update
  for a user on an idea in a private groups project where she's not member of a manual group with access
    is expected not to permit :show
    is expected not to permit :update
    does not index the idea
    is expected not to permit :destroy
    is expected to raise Pundit::NotAuthorizedError
  on idea in a public project
    for a user who is not the idea author
      is expected to permit :show
      is expected not to permit :create
      indexes the idea
      is expected not to permit :update
      is expected not to permit :destroy
    for a user who did not complete registration who is the idea author
      is expected not to permit :update
      is expected not to permit :create
      is expected not to permit :destroy
      is expected to permit :show
      indexes the idea
    for a user who is the idea author
      is expected to permit :create
      indexes the idea
      is expected to permit :update
      is expected to permit :destroy
      is expected to permit :show
    for a visitor
      indexes the idea
      is expected not to permit :update
      is expected to raise Pundit::NotAuthorizedError
      is expected not to permit :destroy
      is expected to permit :show
    for an admin
      indexes the idea
      is expected to permit :create
      is expected to permit :update
      is expected to permit :destroy
      is expected to permit :show

CustomFieldOption
  hooks
    generates unique keys in the custom field scope on creation, if not specified

Notifications::OfficialFeedbackOnCommentedInitiative
  make_notifications_on
    generates exactly one notification for each user that commented on the initiative

IdeaImagePolicy
  on an image of an idea in a private admins project
    for an admin
      is expected to permit :show
      is expected to permit :create
      is expected to permit :update
      indexes the image
      is expected to permit :destroy
    for a user
      is expected not to permit :update
      is expected not to permit :create
      is expected not to permit :destroy
      is expected not to permit :show
      does not index the image
  on an image of an idea in a public project
    for a user who is the idea author
      is expected to permit :destroy
      indexes the image
      is expected to permit :update
      is expected to permit :show
      is expected to permit :create
    for a visitor
      is expected not to permit :create
      is expected not to permit :update
      indexes the image
      is expected not to permit :destroy
      is expected to permit :show
    for an admin
      indexes the image
      is expected to permit :show
      is expected to permit :create
      is expected to permit :update
      is expected to permit :destroy
    for a user who is not the idea author
      is expected not to permit :update
      is expected not to permit :create
      indexes the image
      is expected not to permit :destroy
      is expected to permit :show

Notifications::OfficialFeedbackOnVotedInitiative
  make_notifications_on
    generates exactly one notification for each user that voted on the initiative

Stats - Users
  GET web_api/v1/stats/active_users_by_time_as_xlsx
    with time filters only
      Active users by time
  GET web_api/v1/stats/active_users_by_time
    with time filters only
      Active users by time
    with topic filter
      Active users by time filtered by topic
    with group filter
      Active users by time filtered by group
    with project filter
      Active users by time filtered by project
  GET web_api/v1/stats/users_by_time_as_xlsx
    with project filter
      Users by time filtered by project
    with time filters only
      Users by time
    with group filter
      Users by time filtered by group
    with topic filter
      Users by time filtered by topic
    without time range filters
      without filters
    with time filter outside of platform lifetime
      returns no entries
  GET web_api/v1/stats/users_engagement_scores
    List 10 best user engagement scores
  GET web_api/v1/stats/users_count
    Count all users
  GET web_api/v1/stats/users_engagement_scores
    List 10 best user engagement scores
  GET web_api/v1/stats/users_by_time_cumulative
    with topic filter
      Users by time (cumulative) filtered by topic
    with time filters only
      Users by time (cumulative)
    with project filter
      Users by time (cumulative) filtered by project
    with group filter
      Users by time (cumulative) filtered by group
  GET web_api/v1/stats/active_users_by_time_cumulative
    with time filters only
      Active users by time
    with group filter
      Active users by time filtered by group
    with project filter
      Active users by time filtered by project
    with topic filter
      Active users by time filtered by topic
  GET web_api/v1/stats/users_by_time_cumulative_as_xlsx
    with project filter
      Users by time (cumulative) filtered by project as xlsx
    with topic filter
      Users by time (cumulative) filtered by topic as xlsx
    with time filters only
      Users by time (cumulative) as xlsx
    with group filter
      Users by time (cumulative) filtered by group as xlsx
  GET web_api/v1/stats/users_by_time
    with topic filter
      Users by time filtered by topic
    with project filter
      Users by time filtered by project
    with group filter
      Users by time filtered by group
    with time filter outside of platform lifetime
      returns no entries
    without time range filters
      without filters
    with time filters only
      Users by time

TrackIntercomService
  identify_user
    creates an Intercom contact if the contact didn't exist yet
    doesn't interact with Intercom when the given user is not an admin or moderator
    updates an Intercom contact if it already exist
  track_activity
    doesn't interact with Intercom when the given user is not an admin or moderator
    sends the activity to Intercom

Comments
  GET web_api/v1/ideas/comments/as_xlsx
    XLSX export of comments on ideas
    
      XLSX export by project
    when the user moderates the project
      XLSX export
    when the user moderates another project
      [error] XLSX export
    
      [error] XLSX export by a normal user
    
      XLSX export by idea ids
  GET web_api/v1/comments/:comment_id/children
    List the direct child comments of a comment on an idea
  when authenticated
    POST web_api/v1/ideas/:idea_id/comments
      Create a comment on an idea
      
        [error] Create an invalid comment
      
        Create a comment on a comment
      
        Commenting should be enabled by default in a budgeting project
      
        [error] Create a comment with blocked words
      
        [error] Create a comment on an idea in an inactive project
    GET web_api/v1/ideas/:idea_id/comments
      List all comments of an idea includes the user_vote when authenticated
    POST web_api/v1/comments/:id/mark_as_deleted
      Admins cannot mark a comment as deleted without a reason
      Mark a comment on an idea as deleted
    PATCH web_api/v1/comments/:id
      Admins cannot modify a comment on an idea
      Update a comment on an idea
  GET web_api/v1/ideas/:idea_id/comments
    
      List the top-level comments of an idea sorted by descending upvotes_count
    
      List the top-level comments of an idea
  GET web_api/v1/comments/:id
    Get one comment by id

SideFxPhaseService
  after_create
    logs a 'created' action when a phase is created
    runs the description through the necessary steps
  before_destroy
    calls before_destroy on SideFxParticipationContextService
  after_update
    logs a 'changed' action job when the phase has changed
  before_update
    runs the description through the text image service
  after_destroy
    logs a 'deleted' action job when the phase is destroyed

EventPolicy
  on event in a public project
    for a visitor
      is expected not to permit :create
      is expected not to permit :update
      is expected to permit :show
      should index the event
      is expected not to permit :destroy
    for an admin
      is expected to permit :update
      is expected to permit :destroy
      is expected to permit :show
      should index the event
      is expected to permit :create
    for a mortal user
      should index the event
      is expected not to permit :destroy
      is expected not to permit :create
      is expected not to permit :update
      is expected to permit :show
  for a user on an event in a private groups project where she's a member of a manual group with access
    is expected not to permit :create
    is expected to permit :show
    is expected not to permit :destroy
    should index the event
    is expected not to permit :update
  for a visitor on an event in a private groups project
    is expected not to permit :update
    is expected not to permit :show
    is expected not to permit :create
    should not index the event
    is expected not to permit :destroy
  for a user on an event in a private groups project where she's no member of a manual group with access
    is expected not to permit :show
    should not index the event
    is expected not to permit :destroy
    is expected not to permit :create
    is expected not to permit :update

Events
  when authenticated
    POST web_api/v1/projects/:project_id/events
      
        [error] Create an invalid event
      
        Create an event for a project
    DELETE web_api/v1/events/:id
      Delete a event
    PATCH web_api/v1/events/:id
      Update an event
  GET web_api/v1/events/:id
    Get one event by id
  GET web_api/v1/events
    not passing a project id
      List all events
    passing project ids
      List all events of a project

WebApi::V1::UserSerializer
  with 'abbreviated user names' enabled
    should abbreviate the user name
    should not abbreviate user names for admins

Activities
  GET web_api/v1/initiatives/:initiative_id/activities
    List all activities

InitiativeCommentPolicy
  on comment on initiave
    for an admin
      is expected to permit :show
      is expected to permit :update
      indexes the comment
      is expected to permit :create
      is expected not to permit :destroy
    for a visitor
      is expected not to permit :destroy
      is expected not to permit :create
      is expected not to permit :update
      is expected to permit :show
      indexes the comment
    for a user who is the author of the comment
      indexes the comment
      is expected to permit :create
      is expected to permit :update
      is expected not to permit :destroy
      is expected to permit :show
    for a user who is not the author of the comment
      indexes the comment
      is expected to permit :show
      is expected not to permit :create
      is expected not to permit :update
      is expected not to permit :destroy

SettingsService
  missing_dependencies
    is empty on met dependencies
    contains missing disabled dependency
    is empty on an empty settings
    contains disallowed dependency
  add_missing_settings
    adds required settings with a default
    doesn't change existing settings
  remove_private_settings
    removes private settings
    leaves non-private schema settings alone
  remove_additional_features
    removes features not in the schema
    leaves schema features alone
  add_missing_features
    makes missing features to unallowed and unenabled
    adds missing features to existing settings
    adds the missing features to empty settings
    leaves features not in the schema unchanged
  remove_additional_settings
    leaves schema settings alone
    removes settings not in the schema

InitiativesFinder
  when passing a sort param '-status'
    sorts initiatives by '-status'
    is successful
  without passing params
    sorts initiatives by 'new'
    is successful
    returns all initiatives
  #areas_condition
    filters by areas
    is successful
  #initiatives_condition
    is successful
    filters by initiatives
  #assignee_condition
    is successful
    filters by assignee
  when passing a sort param '-upvotes_count'
    is successful
    sorts initiatives by '-upvotes_count'
  when passing a sort param '-author_name'
    sorts initiatives by 'author_name'
    fails without a join table
    is successful
  when passing a sort param '-new'
    is successful
    sorts initiatives by '-new'
  #feedback_needed_condition
    when true
      is successful
      filters by feedback needed
    when false
      is successful
      filters by feedback not needed
  #bounding_box_condition
    filters by bounding_box
    is successful
  when passing a sort param 'status'
    sorts initiatives by 'status'
    is successful
  when passing a sort param 'new'
    sorts initiatives by 'new'
    is successful
  #initiative_status_condition
    filters by initiative_status
    is successful
  when passing a sort param 'upvotes_count'
    sorts initiatives by 'upvotes_count'
    is successful
  #topics_condition
    is successful
    filters by topics
  #publication_status_condition
    is successful
    filters by publication_status
  when passing a sort param 'random'
    sorts initiatives by 'random'
    is successful
  #author_condition
    filters by author
    is successful
  #search_condition
    filters by search param
  when passing a sort param 'author_name'
    is successful
    sorts initiatives by 'author_name'
    fails without a join table

Memberships
  POST web_api/v1/groups/:group_id/memberships
    when admin
      Add an invitee as a group member
  CRUD memberships
    DELETE web_api/v1/groups/:group_id/memberships/by_user_id/:user_id
      Delete a membership by group id and user id
    POST web_api/v1/groups/:group_id/memberships
      Add a group member
    GET web_api/v1/groups/:group_id/memberships
      List all members of a group
    DELETE web_api/v1/memberships/:id
      Delete a membership
    GET web_api/v1/memberships/:id
      Get one membership by id
    GET web_api/v1/groups/:group_id/memberships/by_user_id/:user_id
      Get one membership by group id and user id
  Users search
    GET web_api/v1/groups/:group_id/memberships/users_search
      Search for users and see whether or not they are member of the group

ApplicationRecord
  #valid_attribute?
    doesnt add errors to the user
    returns true for a valid value
    returns false for an invalid value
    doesnt change #errors

OmniauthMethods::Google
  profile_to_user_attrs
    correctly interprets gender, locale and image for google

ProjectFile
  GET web_api/v1/projects/:project_id/files
    List all file attachments of a project
  GET web_api/v1/projects/:project_id/files/:file_id
    Get one file of a project
  POST web_api/v1/projects/:project_id/files
    Add a file attachment to a project
    
      [error] Add a file of which the size is too large
    
      [error] Add an unsupported file extension as attachment to a project
  DELETE web_api/v1/projects/:project_id/files/:file_id
    Delete a file attachment from a project

Invite
  Deleting an invite
    deletes the invitee when the invite is pending
    retains the invitee when the invite is accepted
  Default factory
    is valid

Projects
  when admin
    GET web_api/v1/projects/:id
      Get one project by id
      Get a project includes the participants_count, avatars and avatars_count
      Get a project on a timeline project includes the current_phase
      Get a project with a basket
    PATCH web_api/v1/projects/:id
      Disable downvoting
      Clear all areas
      Disable downvoting when feature is not enabled
      Update a project
      Set default assignee to unassigned
      [error] Put a project in a non-existing folder
      Add a project to a folder
      Remove a project from a folder
      
        The header image can be removed
    POST web_api/v1/projects
      
        Create a continuous project
        
          [error] Create an invalid project
        
          Create a project with text image
          [error] Create a project with text image without title
        when not admin
          [error] Create a project
      
        Create a project in a folder
        Create a timeline project
    DELETE web_api/v1/projects/:id
      Delete a project
      Deleting a project removes associated moderator rights
    GET web_api/v1/projects
      List only projects with specified IDs
      Admins can moderate all projects
      Get all projects on the second page with fixed page size
      List all projects from a folder
      List all projects with all given areas
      List all top-level projects
      List all projects with all given topics
      List all projects with a topic
      List all projects (default behaviour)
      List all projects with an area
      List all draft or archived projects
    GET web_api/v1/projects/by_slug/:slug
      Get one project by slug
      
        Get an unexisting project by slug
  when not logged in
    GET web_api/v1/projects
      List all projects the current user can moderate
  GET web_api/v1/projects
    when admin
      Admins moderate all projects
    when moderator
      List all projects the current user can moderate
    when non-moderator/non-admin user
      Normal users cannot moderate any projects
      Get projects with access rights

Ideas
  GET web_api/v1/ideas
    List all ideas in a phase of a project
    List all ideas in any of the given projects
    List all ideas that need feedback
    Search for ideas should work with trending ordering
    List all ideas sorted by new
    List all ideas by random ordering
    List all ideas in a project
    List all ideas for a topic
    List all ideas for an idea status
    List all ideas includes the user_vote
    Search for ideas
    List all ideas for a user
    List all ideas for a topic with other filters enabled
    Default trending ordering
    List all ideas in published projects
    List all published ideas (default behaviour)
    List all ideas with an area
    List all ideas for an assignee
    Don't list drafts (default behaviour)
    List all ideas which match one of the given topics
    List all ideas which match one of the given areas
  GET web_api/v1/ideas/as_xlsx_with_tags
    XLSX export
    
      [error] XLSX export by a normal user
    
      XLSX export by idea ids
    
      XLSX export by project
  PATCH web_api/v1/ideas/:id
    Change the publication status
  POST web_api/v1/ideas
    
      [error] Create an idea with blocked words
    
      Check for the automatic creation of an upvote by the author when an idea is created
      Create an idea
    when admin
      
        [error] Creating an idea linked to a phase from a different project
      
        Creating an idea in specific phases
    with granular permissions
      Create an idea in a project with groups posting permission
      [error] Create an idea in a project with groups posting permission
    
      [error] Creating an invalid idea
    
      [error] Creating an idea in a project with an active information phase
    For projects without ideas_order
      Creates an idea
    
      [error] Create an idea with too long title
    
      [error] Create an idea without a project
  DELETE web_api/v1/ideas/:id
    when the idea belongs to a timeline project
      Delete an idea
      the count starts at 1
    when the idea belongs to a continuous project
      Delete an idea
  GET web_api/v1/ideas/as_xlsx
    XLSX export
    
      XLSX export by project
    
      [error] XLSX export by a normal user
    
      XLSX export by idea ids
  GET web_api/v1/ideas/:id
    Get one idea by id
  GET web_api/v1/ideas/filter_counts
    List idea counts per filter option with a search string
    List idea counts per filter option on area
    List idea counts per filter option on topic
    List idea counts per filter option
  GET web_api/v1/ideas/by_slug/:slug
    Get one idea by slug
    
      [error] Get an unexisting idea
  PATCH web_api/v1/ideas/:id
    
      Update an idea
      Check for the automatic creation of an upvote by the author when the publication status of an idea is updated from draft to published
      [error] Removing the author of a published idea
    
      Remove the topics/areas
    
      Changing the assignee as a non-admin does not work
    when moderator
      
        Change the idea status (as a moderator)
      
        Change the assignee (as a moderator)
    when unauthorized
      
        Change the idea status (unauthorized)
    
      Change the idea status as a non-admin does not work
    when admin
      
        Change the idea status (as an admin)
      phase_ids
        when passing some phase ids
          Changes the ideas count of a phase
          Change the idea phases (as an admin or moderator)
          returns a 200 status
        when passing an empty array of phase ids
          returns a 200 status
          Change the idea phases (as an admin or moderator)
          Changes the ideas count of a phase when the phases change
      
        Change the participatory budget (as an admin)
      
        Change the assignee (as an admin)
      
        Change the project (as an admin)
    
      Change the participatory budget as a non-admin does not work
  GET web_api/v1/ideas/as_markers
    List all idea markers within a bounding box
    List all idea markers in a phase of a project

OmniauthMethods::AzureActiveDirectory
  profile_to_user_attrs
    correctly interprets gender, locale and image for google

PageLink
  Default factory
    is valid

ProjectImage
  DELETE web_api/v1/projects/:project_id/images/:image_id
    Delete an image from a project
  GET web_api/v1/projects/:project_id/images/:image_id
    Get one image of a project
  GET web_api/v1/projects/:project_id/images
    List all images of a project
  POST web_api/v1/projects/:project_id/images
    Add an image to a project
    
      [error] Add an invalid image to a project
    
      [error] Add an invalid image type to a project
  PATCH web_api/v1/projects/:project_id/images/:image_id
    Edit an image for a project

Notifications::OfficialFeedbackOnCommentedIdea
  make_notifications_on
    doesn't generate notifications for the idea author
    doesn't generate (invalid) notifications for comments attributed to a deleted user
    generates exactly one notification for each user that commented on the idea

Comments
  GET web_api/v1/comments/:id
    Get one comment by id
  GET web_api/v1/initiatives/:initiative_id/comments
    
      List the top-level comments of an initiative sorted by descending upvotes_count
    
      List the top-level comments of an initiative
  when authenticated
    POST web_api/v1/initiatives/:initiative_id/comments
      Create a comment on an initiative
    PATCH web_api/v1/comments/:id
      Admins cannot modify a comment on an initiative
      Update a comment on an initiative
    POST web_api/v1/comments/:id/mark_as_deleted
      Mark a comment on an initiative as deleted
    GET web_api/v1/initiatives/:initiative_id/comments
      List all comments of an initiative includes the user_vote when authenticated
  GET web_api/v1/initiatives/comments/as_xlsx
    
      [error] XLSX export by a normal user
    
      XLSX export by initiative ids
    
      XLSX export of comments on initiatives
  GET web_api/v1/comments/:comment_id/children
    List the direct child comments of a comment on an initiative

Groups
  when authenticated
    DELETE web_api/v1/groups/:id
      Delete a group
    PATCH web_api/v1/groups/:id
      Update a group
    GET web_api/v1/groups/:id
      Get one group by id
    POST web_api/v1/groups
      
        Create a group with 'manual' membership_type
      
        Create a group with 'rules' membership_type
      
        Membership count should only count active users
    GET web_api/v1/groups
      List all groups
      List all groups with membership_type 'rules'

PhasePolicy
  on phase in a public project
    for a mortal user
      is expected not to permit :update
      is expected not to permit :create
      should index the phase
      is expected to permit :show
      is expected not to permit :destroy
    for a visitor
      is expected to permit :show
      is expected not to permit :update
      is expected not to permit :create
      is expected not to permit :destroy
      should index the phase
    for an admin
      is expected to permit :show
      is expected to permit :destroy
      is expected to permit :update
      should index the phase
      is expected to permit :create
  for a user on a phase in a private groups project where she's no member of a manual group with access
    is expected not to permit :destroy
    should not index the phase
    is expected not to permit :create
    is expected not to permit :update
    is expected not to permit :show
  for a user on a phase in a private groups project where she's a member of a manual group with access
    is expected to permit :show
    is expected not to permit :create
    is expected not to permit :destroy
    is expected not to permit :update
    should index the phase
  for a visitor on a phase in a private groups project
    is expected not to permit :update
    is expected not to permit :destroy
    should not index the phase
    is expected not to permit :show
    is expected not to permit :create

PermissionPolicy
  for an admin
    indexes the permission
    is expected to permit :show
    is expected to permit :participation_conditions
    is expected to permit :update
  for a member of a group with granular permissions
    is expected not to permit :update
    indexes some permissions
    is expected not to permit :show
    is expected to permit :participation_conditions
  for a visitor
    is expected to permit :participation_conditions
    is expected not to permit :show
    is expected not to permit :update
    indexes some permissions
  for a user
    is expected not to permit :update
    indexes some permissions
    is expected not to permit :show
    is expected to permit :participation_conditions

AdminPublicationPolicy
  on a public project
    for an admin
      should index the project holder
      is expected to permit :reorder
    for a user
      should index the project holder
      is expected not to permit :reorder
    for a visitor
      should index the project holder
      is expected not to permit :reorder
  on a private admins project
    for a user
      is expected not to permit :reorder
      should not index the project holder
    for a visitor
      is expected not to permit :reorder
      should not index the project holder
    for an admin
      is expected to permit :reorder
      should index the project holder
  for a visitor on a private groups project
    is expected not to permit :reorder
    should not index the project holder

CitizenLab::Mixins::SettingsSpecification
  with settings specified as JSON
    generates the str version of the settings json-schema
  with settings specified as a string
    generates the str version of the settings json-schema

IdeaStatuses
  when signed in as a non-admin user
    GET web_api/v1/idea_statuses
      List all idea statuses
    GET web_api/v1/idea_statuses/:id
      Get one idea status by id
  when signed in as an admin
    GET web_api/v1/idea_statuses
      List all idea statuses
    GET web_api/v1/idea_statuses/:id
      Get one idea status by id
  when not logged in
    GET web_api/v1/idea_statuses
      List all idea statuses
    GET web_api/v1/idea_statuses/:id
      Get one idea status by id

InitiativeVotePolicy
  for a mortal user who owns the vote
    is expected to permit :up
    is expected to permit :show
    should index the vote
    is expected to raise Pundit::NotAuthorizedError
    is expected to permit :create
    is expected to permit :destroy
  for a mortal user on a vote of another user
    is expected not to permit :create
    is expected not to permit :up
    is expected not to permit :destroy
    should not index the vote
    is expected not to permit :show
    is expected to raise Pundit::NotAuthorizedError
  for a visitor
    is expected not to permit :create
    is expected not to permit :show
    is expected not to permit :destroy
    should not index the vote
    is expected not to permit :up
    is expected to raise Pundit::NotAuthorizedError
  for an admin
    is expected to raise Pundit::NotAuthorizedError
    is expected not to permit :up
    is expected not to permit :destroy
    is expected to permit :show
    is expected not to permit :create
    should index the vote

SideFxVoteService
  after_destroy
    logs a 'canceled_downvote' action job when a downvote is deleted
    logs a 'canceled_upvote' action job when an upvote is deleted
  after_create
    logs a 'upvoted' action when a upvote on an initiative is created
    logs a 'downvoted' action when a downvote is created
    logs a 'upvoted' action when a upvote on an idea is created

Votes
  POST web_api/v1/ideas/:idea_id/votes/down
    Downvote an idea that doesn't have your vote yet
    [error] Downvote in a project where downvoting is disabled
    Downvote an idea that you upvoted before
    [error] Downvote an idea that you downvoted before
  DELETE web_api/v1/votes/:id
    Delete a vote from an idea
  POST web_api/v1/ideas/:idea_id/votes
    Create a vote to an idea
    When the user already voted
      [error] Upvote the same idea
      [error] Downvote the same idea
  GET web_api/v1/ideas/:idea_id/votes
    List all votes of an idea
  POST web_api/v1/ideas/:idea_id/votes/up
    Upvote an idea that you downvoted before
    [error] Upvote an idea that you upvoted before
    Upvote an idea that doesn't have your vote yet
    
      [error] Upvote an idea in a project where you can vote only once
    when voting idea is allowed by moderators/admins
      [error] Upvote an idea in a project where voting is not permitted
    
      [error] Upvote an idea in a project where voting is disabled
  GET web_api/v1/votes/:id
    Get one vote on an idea by id

Notifications::CommentOnYourIdea
  make_notifications_on
    makes a notification on created comment activity

Pages
  PATCH web_api/v1/pages/:id
    Update a page
  GET web_api/v1/pages/by_slug/:slug
    Get one page by slug
    
      [error] Get an unexisting page by slug
  GET web_api/v1/pages
    List all pages in a project
    
      List all pages
  POST web_api/v1/pages
    
      [error] Create an invalid page
    
      Create a page
  GET web_api/v1/pages
    Get all pages on the second page with fixed page size
  DELETE web_api/v1/pages/:id
    Delete a page
  GET web_api/v1/pages/:id
    Get one page by id
    
      Get all linked pages of a linking page

CitizenLab::Mixins::FeatureSpecification
  Simple feature specification
    .required_settings
      is expected to be empty
    .settings
      is expected to be empty
    .settings_props
      is expected to be empty
    .json_schema
      is expected to eq "Co-authorship"
      is expected not to have key "required-settings"
      is expected not to have key "description"
      is expected to eq {"allowed"=>{"default"=>true, "type"=>"boolean"}, "enabled"=>{"default"=>true, "type"=>"boolean"}}
  Complex feature specification
    .settings
      is expected to eq 2
      is expected to have attributes {:name => "live_edit", :required => true, :schema => {"type" => "boolean"}}
    .settings_props
      is expected to match {"live_edit"=>{"type"=>"boolean"}, "max_nb_authors"=>{"type"=>"number", "default"=>0}}
    .required_settings
      is expected to eq ["live_edit"]
    .json_schema
      is expected to eq ["live_edit"]
      is expected to eq "Allow submissions to be co-authored. All co-authors have write \npermission on the submission.\n"
      is expected to eq "Co-authorship"
      is expected to include {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}
      is expected to include {"live_edit" => {"type" => "boolean"}}
      is expected to include {"max_nb_authors" => {"type" => "number", "default" => 0}}

Permission
  #denied?
    when not signed in
      is expected to eq "not_permitted"
      is expected to eq "not_signed_in"
      is expected not to be denied nil
    when signed in
      is expected to be denied #<User id: nil, email: "estell.boehm5169@koepp-ledner.info", password_digest: "$2a$04$Phnb8LAktLL24Hh...confirmation_code_reset_count: 0, email_confirmation_code_sent_at: nil, confirmation_required: true>
      is expected not to be denied #<User id: nil, email: "herb_kerluke5170@bahringer-marquardt.org", password_digest: "$2a$04$D0fy6Gyh2...confirmation_code_reset_count: 0, email_confirmation_code_sent_at: nil, confirmation_required: true>
      is expected not to be denied #<User id: nil, email: "mable.mitchell5171@block.info", password_digest: "$2a$04$hIb.n2axUJ.ck2CrLs70...confirmation_code_reset_count: 0, email_confirmation_code_sent_at: nil, confirmation_required: true>
    when user is admin
      is expected not to be denied #<User id: nil, email: "forest5172@wehner-armstrong.name", password_digest: "$2a$04$szif3xjS9t0m/jqdn...confirmation_code_reset_count: 0, email_confirmation_code_sent_at: nil, confirmation_required: true>
      is expected not to be denied #<User id: nil, email: "marshall.goodwin5173@runte.name", password_digest: "$2a$04$ovi1K.AngyRzXrxxj....confirmation_code_reset_count: 0, email_confirmation_code_sent_at: nil, confirmation_required: true>
      is expected not to be denied #<User id: nil, email: "leslie.mertz5174@monahan-nikolaus.org", password_digest: "$2a$04$KLPZMyaDJBPx...confirmation_code_reset_count: 0, email_confirmation_code_sent_at: nil, confirmation_required: true>
  #for_user
    when user is admin
      is expected to contain exactly #<Permission id: "84c0b763-cd78-4c81-9f0b-ea08fbe731b1", action: "a1", permitted_by: "everyone", perm...reated_at: "2021-09-14 10:26:28.720515103 +0000", updated_at: "2021-09-14 10:26:28.720515103 +0000">, #<Permission id: "4d122cfc-b2f5-4be4-814f-e5fe1621a4d8", action: "a2", permitted_by: "users", permiss...reated_at: "2021-09-14 10:26:28.757446805 +0000", updated_at: "2021-09-14 10:26:28.757446805 +0000">, #<Permission id: "5c2a33ea-8dc1-4dd8-b0c8-1c1e805ce8f3", action: "a3", permitted_by: "admins_moderato...reated_at: "2021-09-14 10:26:28.790198388 +0000", updated_at: "2021-09-14 10:26:28.790198388 +0000">, and #<Permission id: "81987548-6b6e-4d7e-93c4-1ce04619d3be", action: "a4", permitted_by: "groups", permis...reated_at: "2021-09-14 10:26:28.831787780 +0000", updated_at: "2021-09-14 10:26:28.831787780 +0000">
    when not logged in
      is expected to contain exactly #<Permission id: "b0bbb578-781c-4640-a959-6db0e34af76e", action: "a1", permitted_by: "everyone", perm...reated_at: "2021-09-14 10:26:28.968992949 +0000", updated_at: "2021-09-14 10:26:28.968992949 +0000">
    when user is logged in
      is expected to contain exactly #<Permission id: "3506fe1a-bd72-472e-b712-f09d93482a6d", action: "a1", permitted_by: "everyone", perm...reated_at: "2021-09-14 10:26:29.117949043 +0000", updated_at: "2021-09-14 10:26:29.117949043 +0000"> and #<Permission id: "9e639af8-bd06-482f-83e5-a664ac32afdc", action: "a2", permitted_by: "users", permiss...reated_at: "2021-09-14 10:26:29.150041618 +0000", updated_at: "2021-09-14 10:26:29.150041618 +0000">
    when user belongs to the authorized manual group
      is expected to contain exactly #<Permission id: "5c1bb8b8-92cc-4179-9c15-c9d21e608790", action: "a1", permitted_by: "everyone", perm...reated_at: "2021-09-14 10:26:29.435154908 +0000", updated_at: "2021-09-14 10:26:29.435154908 +0000">, #<Permission id: "7cf33e27-a2dc-4e78-ab6e-45e32df3a906", action: "a2", permitted_by: "users", permiss...reated_at: "2021-09-14 10:26:29.465648049 +0000", updated_at: "2021-09-14 10:26:29.465648049 +0000">, and #<Permission id: "51b9ece1-93f9-4fab-8f5a-25cae57b525f", action: "a4", permitted_by: "groups", permis...reated_at: "2021-09-14 10:26:29.535590407 +0000", updated_at: "2021-09-14 10:26:29.535590407 +0000">

ActivitiesService
  #create_periodic_activities
    doesn't log phase started activity when no new phase starts (in the application timezone)
    logs phase started activity when a new phase starts (in the application timezone)
    doesn't log phase upcoming activity when no new phase starts in a week (in the application timezone)
    logs invite not accepted since 3 days activity when an invite was not accepted since (in the application timezone)
    doesn't log accepted since 3 days activity when no invite wasn't accepted since (in the application timezone)
    logs phase upcoming activity when a new phase starts in a week (in the application timezone)

Votes
  POST web_api/v1/initiatives/:initiative_id/votes/up
    Upvote an initiative that doesn't have your vote yet
    Upvote an initiative that you downvoted before
    [error] Upvote an initiative that you upvoted before
  DELETE web_api/v1/votes/:id
    Delete a vote from an initiative
  GET web_api/v1/initiatives/:initiative_id/votes
    List all votes of an initiative
  POST web_api/v1/initiatives/:initiative_id/votes
    Reaching the voting threshold immediately triggers status change
    Create a vote to an initiative
  GET web_api/v1/votes/:id
    Get one vote on an initiative by id
  POST web_api/v1/initiatives/:initiative_id/votes/down
    [error] Downvote an initiative that doesn't have your vote yet

Comment Votes
  GET web_api/v1/votes/:id
    [error] Get one vote on a comment by id
    Get one vote on a comment by id
  POST web_api/v1/comments/:comment_id/votes/up
    [error] Upvote a comment that you upvoted before
    Upvote a comment that doesn't have your vote yet
    Upvote a comment that you downvoted before
  GET web_api/v1/comments/:comment_id/votes
    List all votes of a comment
  POST web_api/v1/comments/:comment_id/votes/down
    [error] Downvote a comment that you upvoted before
  POST web_api/v1/comments/:comment_id/votes
    Create a vote on a comment
    
      Create a vote on a comment of an initiative
  DELETE web_api/v1/votes/:id
    Delete a vote from a comment

SideFxProjectService
  before_update
    runs the description through the text image service
  after_destroy
    logs a 'deleted' action job when the project is destroyed
  after_create
    logs a 'created' action when a project is created
    runs the description through the text image service
    calls after_create on SideFxParticipationContextService for a continuous project
    doesn't call after_create on SideFxParticipationContextService for a timeline project
  after_update
    calls before_update on SideFxParticipationContextService for a continuous project
    doesn't call before_update on SideFxParticipationContextService for a timeline project
    logs a 'changed' action job when the project has changed
  before_destroy
    calls before_destroy on SideFxParticipationContextService for a continuous project
    doesn't call before_destroy on SideFxParticipationContextService for a timeline project

Group
  Default factory
    is valid
  users (members)
    can be assigned to manual groups
    has consistent responses between member and member_ids
    can be added to and removed from manual groups
  update_memberships_count!
    does nothing for a manual group

Notifications::CommentOnYourInitiative
  make_notifications_on
    makes a notification on created comment activity

UserDisplayNameService
  when 'abbreviated_user_names' is enabled
    admins should see full names
    unknown users shouldn't see full names
    unknown and regular users should see the full name of admins
    regular users should see their full name
    regular users shouldn't not full names of other users
  when 'abbreviated_user_names' is disabled
    admins should see full names
    regular users should see full names of other users

IdeaFilePolicy
  on a file of an idea in a public project
    for a user who is the idea author
      is expected to permit :destroy
      indexes the file
      is expected to permit :update
      is expected to permit :show
      is expected to permit :create
    for a user who is not the idea author
      is expected not to permit :update
      is expected to permit :show
      is expected not to permit :destroy
      is expected not to permit :create
      indexes the file
    for an admin
      indexes the file
      is expected to permit :create
      is expected to permit :show
      is expected to permit :update
      is expected to permit :destroy
    for a visitor
      is expected not to permit :update
      indexes the file
      is expected not to permit :create
      is expected not to permit :destroy
      is expected to permit :show
  on a file of an idea in a private admins project
    for an admin
      is expected to permit :show
      indexes the file
      is expected to permit :create
      is expected to permit :destroy
      is expected to permit :update
    for a user
      is expected not to permit :create
      does not index the file
      is expected not to permit :show
      is expected not to permit :destroy
      is expected not to permit :update

Baskets
  PATCH web_api/v1/baskets/:basket_id
    when authenticated
      'baskets_count' is updated when submitting a basket
      'baskets_count' is not updated when adding/removing the idea to an unsubmitted basket
      'baskets_count' is updated when adding/removing the idea to a submitted basket
      'baskets_count' is updated when unsubmitting a basket
      'baskets_count' stay up to date after removing an idea from the basket
        is expected to eq 2
      
        Update a basket
  POST web_api/v1/baskets
    when authenticated
      [error] Create a basket in a survey
      Create a basket
  GET web_api/v1/baskets/:basket_id
    when authenticated
      Get one basket by id
  DELETE web_api/v1/baskets/:basket_id
    when authenticated
      Delete a basket

Callable::Test::SimpleService
  ::call
    succeeds
    returns a result object

Topics
  GET web_api/v1/topics
    List all topics
    List all topics sorted by newest first
    List all topics by code
    List all topics sorted by custom ordering
    List all topics by code exclusion
  GET web_api/v1/projects/:project_id/topics
    List all topics of a project
    List all topics of a project sorted by custom ordering
  GET web_api/v1/topics/:id
    Get one topic by id

Users
  when not authenticated
    POST web_api/v1/users/reset_password
      [error] Reset password reset of an invitee
      Reset password using token
      [error] Reset password using invalid token
    POST web_api/v1/users/reset_password_email
      Trigger email with password reset link
      [error] Request password reset of an invitee
      Email matching on password reset
        does not use underscores in a special manner
        is case insensitive
        does not use percentages in a special manner

Topics
  GET web_api/v1/projects/:id/projects_topics
    List all projects topics of a project
  when admin
    DELETE web_api/v1/projects_topics/:id
      Delete a topic from a project
    PATCH web_api/v1/projects_topics/:id/reorder
      Reorder a project topic
    POST web_api/v1/projects_topics
      Add a topic to a project
  GET web_api/v1/projects_topics
    List all projects topics
  GET web_api/v1/projects_topics/:id
    Get one projects topic by id

ProjectImagePolicy
  on an image in a public project
    for an admin
      is expected to permit :update
      should index the image
      is expected to permit :destroy
      is expected to permit :create
      is expected to permit :show
    for a mortal user
      is expected to permit :show
      should index the image
      is expected not to permit :create
      is expected not to permit :update
      is expected not to permit :destroy
    for a visitor
      should index the image
      is expected not to permit :create
      is expected to permit :show
      is expected not to permit :destroy
      is expected not to permit :update
  on an image in a private admins project
    for a user
      should not index the image
      is expected not to permit :destroy
      is expected not to permit :create
      is expected not to permit :update
      is expected not to permit :show
    for an admin
      is expected to permit :destroy
      should index the image
      is expected to permit :show
      is expected to permit :update
      is expected to permit :create

Notification
  deleting a post also deletes notifications requiring that post
  deleting an initiative status also deletes notifications requiring that initiative status
  deleting a phase also deletes notifications requiring that phase
  deleting the recipient of a notification also deletes notifications of that recipient
  deleting an invite also deletes notifications requiring that invite
  deleting a project also deletes notifications requiring that project
  deleting initiating user also deletes notifications requiring the initiator
  deleting a comment also deletes notifications requiring that comment
  deleting an official feedback also deletes notifications requiring that official feedback
  deleting an idea status also deletes notifications requiring that idea status
  deleting a spam report also deletes notifications requiring that spam report
  all notification subclass factories
    are valid
  make_notifications_on
    makes a comment deleted by admin notification on comment marked_as_deleted
    makes project_phase_started notifications on phase started
    makes project_phase_started notifications for members of the project group
    makes a comment marked as spam notification on spam report created
    makes a mentioned in comment notification on comment mentioned
    makes a comment on your comment and comment on your idea notification on created comment activity
    makes an idea marked as spam notification on spam report created
    makes a status change of your idea notification on spam report created
    makes an invite accepted notification on invite accepted
  Default factory
    is valid

InitiativeImage
  POST web_api/v1/initiatives/:initiative_id/images
    Add an image to an initiative
  PATCH web_api/v1/initiatives/:initiative_id/images/:image_id
    Update an image for an initiative
  GET web_api/v1/initiatives/:initiative_id/images
    List all images of an initiative
  DELETE web_api/v1/initiatives/:initiative_id/images/:image_id
    Delete an image from an initiative
  GET web_api/v1/initiatives/:initiative_id/images/:image_id
    Get one image of an initiative by id

MakeNotificationsForClassJob
  #perform
    doesn't persist any notification when one is invalid
    enqueues notification created activity
    persists notifications when all are valid

PhoneService
  phone_or_email
    returns nil when email nor phone number
    detects phone numbers
    detects emails
  normalize_phone
    only retains digits

Activity
  Default factory
    is valid
    without item
      is invalid

ActionDescriptors
  GET web_api/v1/action_descriptors/initiatives
    Get the global action descriptors for initiatives
    with granular permissions enabled
      Get the global action descriptors for initiatives

AppConfiguration::Settings
  with one extension feature
    .extension_features_specs
      is expected to eq 1
    .json_schema
      is expected to include {"description" => "Schema for validating the settings on a tenant", "type" => "object", "required" => ["core"], "additionalProperties" => false, "properties" => {"core" => {"type" => "object", "title" => "Core system", "description" => "The container for general settings. The core system should always be enabled.", "required-settings" => ["organization_type", "timezone", "currency", "locales", "color_main", "color_secondary", "color_text", "lifecycle_stage"], "additionalProperties" => false, "required" => ["allowed", "enabled", "lifecycle_stage"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "organization_name" => {"title" => "Organisation Name", "description" => "How the city or organisation is referred to throughout the platform.", "$ref" => "#/definitions/multiloc_string"}, "organization_site" => {"title" => "Organisation Website", "description" => "The city or organisation's official website.", "type" => "string", "pattern" => "^$|^((http://.+)|(https://.+))"}, "organization_type" => {"title" => "Organisation Type", "description" => "Based on city's population: <40k small, 40-120k medium, >120k large. Otherwise, select 'generic'.", "type" => "string", "enum" => ["small_city", "medium_city", "large_city", "generic"], "default" => "medium_city"}, "lifecycle_stage" => {"title" => "Lifecycle Stage", "description" => "The lifecycle stage of the customer.", "type" => "string", "enum" => ["trial", "expired_trial", "demo", "active", "churned", "not_applicable"]}, "timezone" => {"title" => "Time Zone", "type" => "string", "default" => "Brussels", "enum" => ["Edinburgh", "Lisbon", "London", "Monrovia", "UTC", "Amsterdam", "Belgrade", "Berlin", "Bern", "Bratislava", "Brussels", "Budapest", "Casablanca", "Copenhagen", "Dublin", "Ljubljana", "Madrid", "Paris", "Prague", "Rome", "Sarajevo", "Skopje", "Stockholm", "Vienna", "Warsaw", "Zagreb", "Zurich", "West Central Africa", "Athens", "Bucharest", "Helsinki", "Jerusalem", "Kyiv", "Riga", "Sofia", "Tallinn", "Vilnius", "Cairo", "Harare", "Kaliningrad", "Pretoria", "Baghdad", "Istanbul", "Kuwait", "Minsk", "Moscow", "Nairobi", "Riyadh", "St. Petersburg", "Tehran", "Abu Dhabi", "Baku", "Muscat", "Samara", "Tbilisi", "Volgograd", "Yerevan", "Kabul", "Ekaterinburg", "Islamabad", "Karachi", "Tashkent", "Chennai", "Kolkata", "Mumbai", "New Delhi", "Sri Jayawardenepura", "Kathmandu", "Almaty", "Astana", "Dhaka", "Urumqi", "Rangoon", "Bangkok", "Hanoi", "Jakarta", "Krasnoyarsk", "Novosibirsk", "Beijing", "Chongqing", "Hong Kong", "Irkutsk", "Kuala Lumpur", "Perth", "Singapore", "Taipei", "Ulaanbaatar", "Osaka", "Sapporo", "Seoul", "Tokyo", "Yakutsk", "Adelaide", "Darwin", "Canberra", "Hobart", "Melbourne", "Sydney", "Brisbane", "Guam", "Port Moresby", "Vladivostok", "Magadan", "New Caledonia", "Solomon Is.", "Srednekolymsk", "Auckland", "Fiji", "Wellington", "Kamchatka", "Marshall Is.", "Chatham Is.", "Samoa", "Nuku'alofa", "Tokelau Is.", "Azores", "Cape Verde Is.", "Mid-Atlantic", "Brasilia", "Greenland", "Buenos Aires", "Montevideo", "Newfoundland", "Atlantic Time (Canada)", "Santiago", "Caracas", "Georgetown", "La Paz", "Puerto Rico", "Eastern Time (US & Canada)", "Indiana (East)", "Bogota", "Lima", "Quito", "Central Time (US & Canada)", "Guadalajara", "Mexico City", "Monterrey", "Central America", "Saskatchewan", "Chihuahua", "Mazatlan", "Mountain Time (US & Canada)", "Arizona", "Pacific Time (US & Canada)", "Tijuana", "Alaska", "Hawaii", "American Samoa", "Midway Island", "International Date Line West"], "enumNames" => ["UTC+0000 (DST) - Edinburgh", "UTC+0000 (DST) - Lisbon", "UTC+0000 (DST) - London", "UTC+0000 - Monrovia", "UTC+0000 - UTC", "UTC+0100 (DST) - Amsterdam", "UTC+0100 (DST) - Belgrade", "UTC+0100 (DST) - Berlin", "UTC+0100 (DST) - Bern", "UTC+0100 (DST) - Bratislava", "UTC+0100 (DST) - Brussels", "UTC+0100 (DST) - Budapest", "UTC+0100 (DST) - Casablanca", "UTC+0100 (DST) - Copenhagen", "UTC+0100 (DST) - Dublin", "UTC+0100 (DST) - Ljubljana", "UTC+0100 (DST) - Madrid", "UTC+0100 (DST) - Paris", "UTC+0100 (DST) - Prague", "UTC+0100 (DST) - Rome", "UTC+0100 (DST) - Sarajevo", "UTC+0100 (DST) - Skopje", "UTC+0100 (DST) - Stockholm", "UTC+0100 (DST) - Vienna", "UTC+0100 (DST) - Warsaw", "UTC+0100 (DST) - Zagreb", "UTC+0100 (DST) - Zurich", "UTC+0100 - West Central Africa", "UTC+0200 (DST) - Athens", "UTC+0200 (DST) - Bucharest", "UTC+0200 (DST) - Helsinki", "UTC+0200 (DST) - Jerusalem", "UTC+0200 (DST) - Kyiv", "UTC+0200 (DST) - Riga", "UTC+0200 (DST) - Sofia", "UTC+0200 (DST) - Tallinn", "UTC+0200 (DST) - Vilnius", "UTC+0200 - Cairo", "UTC+0200 - Harare", "UTC+0200 - Kaliningrad", "UTC+0200 - Pretoria", "UTC+0300 - Baghdad", "UTC+0300 - Istanbul", "UTC+0300 - Kuwait", "UTC+0300 - Minsk", "UTC+0300 - Moscow", "UTC+0300 - Nairobi", "UTC+0300 - Riyadh", "UTC+0300 - St. Petersburg", "UTC+0330 (DST) - Tehran", "UTC+0400 - Abu Dhabi", "UTC+0400 - Baku", "UTC+0400 - Muscat", "UTC+0400 - Samara", "UTC+0400 - Tbilisi", "UTC+0400 - Volgograd", "UTC+0400 - Yerevan", "UTC+0430 - Kabul", "UTC+0500 - Ekaterinburg", "UTC+0500 - Islamabad", "UTC+0500 - Karachi", "UTC+0500 - Tashkent", "UTC+0530 - Chennai", "UTC+0530 - Kolkata", "UTC+0530 - Mumbai", "UTC+0530 - New Delhi", "UTC+0530 - Sri Jayawardenepura", "UTC+0545 - Kathmandu", "UTC+0600 - Almaty", "UTC+0600 - Astana", "UTC+0600 - Dhaka", "UTC+0600 - Urumqi", "UTC+0630 - Rangoon", "UTC+0700 - Bangkok", "UTC+0700 - Hanoi", "UTC+0700 - Jakarta", "UTC+0700 - Krasnoyarsk", "UTC+0700 - Novosibirsk", "UTC+0800 - Beijing", "UTC+0800 - Chongqing", "UTC+0800 - Hong Kong", "UTC+0800 - Irkutsk", "UTC+0800 - Kuala Lumpur", "UTC+0800 - Perth", "UTC+0800 - Singapore", "UTC+0800 - Taipei", "UTC+0800 - Ulaanbaatar", "UTC+0900 - Osaka", "UTC+0900 - Sapporo", "UTC+0900 - Seoul", "UTC+0900 - Tokyo", "UTC+0900 - Yakutsk", "UTC+0930 (DST) - Adelaide", "UTC+0930 - Darwin", "UTC+1000 (DST) - Canberra", "UTC+1000 (DST) - Hobart", "UTC+1000 (DST) - Melbourne", "UTC+1000 (DST) - Sydney", "UTC+1000 - Brisbane", "UTC+1000 - Guam", "UTC+1000 - Port Moresby", "UTC+1000 - Vladivostok", "UTC+1100 - Magadan", "UTC+1100 - New Caledonia", "UTC+1100 - Solomon Is.", "UTC+1100 - Srednekolymsk", "UTC+1200 (DST) - Auckland", "UTC+1200 (DST) - Fiji", "UTC+1200 (DST) - Wellington", "UTC+1200 - Kamchatka", "UTC+1200 - Marshall Is.", "UTC+1245 (DST) - Chatham Is.", "UTC+1300 (DST) - Samoa", "UTC+1300 - Nuku'alofa", "UTC+1300 - Tokelau Is.", "UTC-0100 (DST) - Azores", "UTC-0100 - Cape Verde Is.", "UTC-0200 - Mid-Atlantic", "UTC-0300 (DST) - Brasilia", "UTC-0300 (DST) - Greenland", "UTC-0300 - Buenos Aires", "UTC-0300 - Montevideo", "UTC-0330 (DST) - Newfoundland", "UTC-0400 (DST) - Atlantic Time (Canada)", "UTC-0400 (DST) - Santiago", "UTC-0400 - Caracas", "UTC-0400 - Georgetown", "UTC-0400 - La Paz", "UTC-0400 - Puerto Rico", "UTC-0500 (DST) - Eastern Time (US & Canada)", "UTC-0500 (DST) - Indiana (East)", "UTC-0500 - Bogota", "UTC-0500 - Lima", "UTC-0500 - Quito", "UTC-0600 (DST) - Central Time (US & Canada)", "UTC-0600 (DST) - Guadalajara", "UTC-0600 (DST) - Mexico City", "UTC-0600 (DST) - Monterrey", "UTC-0600 - Central America", "UTC-0600 - Saskatchewan", "UTC-0700 (DST) - Chihuahua", "UTC-0700 (DST) - Mazatlan", "UTC-0700 (DST) - Mountain Time (US & Canada)", "UTC-0700 - Arizona", "UTC-0800 (DST) - Pacific Time (US & Canada)", "UTC-0800 (DST) - Tijuana", "UTC-0900 (DST) - Alaska", "UTC-1000 - Hawaii", "UTC-1100 - American Samoa", "UTC-1100 - Midway Island", "UTC-1200 - International Date Line West"]}, "currency" => {"title" => "Currency", "description" => "Currency used by the organisation, for projects like participatory budgeting that have budget fields.", "type" => "string", "default" => "EUR", "enum" => ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LVL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD", "SSP", "STD", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "USS", "UYI", "UYU", "UZS", "VEF", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XDR", "XFU", "XOF", "XPD", "XPF", "XPT", "XTS", "XXX", "YER", "ZAR", "ZMW"]}, "locales" => {"title" => "Platform Languages", "description" => "Select all of the languages that will be in use on the platform.", "type" => "array", "items" => {"type" => "string", "enum" => ["en", "ar-SA", "en-GB", "en-CA", "nl-BE", "nl-NL", "fr-BE", "fr-FR", "de-DE", "it-IT", "da-DK", "nb-NO", "es-ES", "es-CL", "pl-PL", "hu-HU", "kl-GL", "ro-RO", "pt-BR", "mi", "sr-Latn"]}, "uniqueItems" => true, "minItems" => 1, "default" => ["en"]}, "color_main" => {"title" => "Main Colour", "description" => "Main colour of platform. Input as a 6-digit HEX color, including the # sign (e.g. #073F80).", "type" => "string", "pattern" => "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$", "default" => "#163A7D"}, "color_secondary" => {"title" => "Secondary Colour", "description" => "Secondary colour of platform. Input as a 6-digit HEX color, including the # sign (e.g. #ff672f).", "type" => "string", "pattern" => "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$", "default" => "#CF4040"}, "color_text" => {"title" => "Text Colour", "description" => "Colour of platform text. Input as a 6-digit HEX color, including the # sign (e.g. #7fbbca).", "type" => "string", "pattern" => "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$", "default" => "#163A7D"}, "header_title" => {"title" => "Homepage Title", "description" => "The header (title) shown on the main banner of the homepage (max 45 characters).", "type" => "object", "allOf" => [{"$ref" => "#/definitions/multiloc_string"}], "additionalProperties" => {"maxLength" => 45}}, "header_slogan" => {"title" => "Homepage Subtitle", "description" => "The sub-title shown on the main banner of the homepage (max 90 characters).", "type" => "object", "allOf" => [{"$ref" => "#/definitions/multiloc_string"}], "additionalProperties" => {"maxLength" => 90}}, "meta_title" => {"title" => "Page Title", "description" => "The title of the homepage displayed on the browser tab in search engine results and when shared on social media.", "$ref" => "#/definitions/multiloc_string"}, "meta_description" => {"title" => "Social Media Description", "description" => "The description of the platform shown in search engine results and when shared on some social media platforms.", "$ref" => "#/definitions/multiloc_string"}, "custom_onboarding_message" => {"title" => "Header Banner Call-to-Action Text", "description" => "Optional Call-to-Action text for signed in users, shown on a banner on the top of the homepage. Accompanied by a Call-to-Action (CTA) button. If this field is left blank, 'Header banner non-call to action' text is shown in the banner.", "$ref" => "#/definitions/multiloc_string", "private" => true}, "custom_onboarding_button" => {"title" => "Header Banner CTA Button", "description" => "Text for the CTA button in the header banner for signed-in users. Accompanies the 'Header banner call to action text' field.", "$ref" => "#/definitions/multiloc_string", "private" => true}, "custom_onboarding_link" => {"title" => "Header Banner CTA Link", "description" => "Web location that the CTA button links to. This should be a relative link on the platform starting with (e.g., platform.citizenlab.co/initiatives should be inputted here as /initiatives).", "type" => "string", "pattern" => "^$|^/.*$", "private" => true}, "custom_onboarding_fallback_message" => {"title" => "Header Banner Non-CTA Text", "description" => "Optional text shown on a banner on the top of the homepage for signed in users. If this field and the 'Header Banner Call-to-Action Text' field are both left blank, the banner text defaults to \"{orgName} is listening to you. It's your turn to make your voice heard!\".", "$ref" => "#/definitions/multiloc_string"}, "currently_working_on_text" => {"title" => "Project Overview Header Title", "description" => "Header title shown at the top of all of the projects on the homepage. If left blank, this field defaults to \"{orgName} is currently working on\".", "$ref" => "#/definitions/multiloc_string"}, "signup_helper_text" => {"title" => "Sign-up Helper Text (Step 1)", "description" => "Optional short text, shown at the top of Step 1 of the sign up form (i.e., email and password). Supports HTML.", "$ref" => "#/definitions/multiloc_string"}, "custom_fields_signup_helper_text" => {"title" => "Sign-up Helper Text (Step 2)", "description" => "Optional short text, shown at the top of Step 2 of the sign up form (i.e., additional registration fields). Supports HTML.", "$ref" => "#/definitions/multiloc_string"}, "areas_term" => {"title" => "Geographic Units", "description" => "What a geographic unit should be called on this platform (e.g., neighbourhoods, districts, etc.). Input the plural form here with all lowercase letters. If left blank, this field defaults to 'areas'.", "$ref" => "#/definitions/multiloc_string"}, "area_term" => {"title" => "Geographic Unit", "description" => "What a geographic unit should be called on this platform (e.g., neighbourhood, district, etc.)? Input the singular form here with all lowercase letters. If left blank, this field defaults to 'area'.", "$ref" => "#/definitions/multiloc_string"}, "reply_to_email" => {"title" => "Reply-to email", "description" => "The email used in the reply-to field when users receive emails from automated campaigns.", "type" => "string", "format" => "email", "default" => "support@citizenlab.co"}}}, "password_login" => {"type" => "object", "title" => "Password Login", "description" => "Allow users to register with an email and password.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["minimum_length", "phone"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "minimum_length" => {"type" => "number", "title" => "Minimum password length", "description" => "The minimum number of characters required for a user password. The default value is 8 (min. 5, max. 72). Longer passwords are generally more secure. Changes to the min. password length will only apply to users that create a new account or update their existing password (existing accounts remain the same).", "minimum" => 5, "maximum" => 72, "default" => 8}, "phone" => {"title" => "Phone", "description" => "Allow users to register with a phone number. This option is not advised, please check with development team before enabling this field.", "type" => "boolean", "default" => false}, "phone_email_pattern" => {"title" => "Phone Number Format", "description" => "Specify how phone numbers should be stored in the database (needs to be in email format - e.g., 'phone+__PHONE__@test.com' stores the phone number as 'phone+32478637483@test.com'.", "type" => "string", "format" => "email", "default" => "phone+__PHONE__@test.com", "pattern" => "^.*__PHONE__.*@.*$", "private" => true}}}, "facebook_login" => {"type" => "object", "title" => "Facebook Login", "description" => "Allow users to register and sign in through their Facebook account.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["app_id"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}, "app_id" => {"title" => "App ID", "type" => "string"}, "app_secret" => {"title" => "App Secret", "type" => "string", "private" => true}}}, "google_login" => {"type" => "object", "title" => "Google Login", "description" => "Allow users to register and sign in through their Google account.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["client_id", "client_secret"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}, "client_id" => {"title" => "Client ID", "type" => "string"}, "client_secret" => {"title" => "Client Secret", "type" => "string", "private" => true}}}, "azure_ad_login" => {"type" => "object", "title" => "Azure Login", "description" => "Allow users to register and sign in with Azure Active Directory.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["tenant", "client_id", "logo_url", "login_mechanism_name"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}, "tenant" => {"title" => "Tenant", "type" => "string", "private" => true}, "client_id" => {"title" => "Client ID", "description" => "Sometimes also called 'application_id'", "type" => "string", "private" => true}, "logo_url" => {"title" => "Logo", "type" => "string", "pattern" => "^https://.+", "description" => "The full URL to the logo image that is shown on the authentication button. Logo should be approx. 25px in height."}, "login_mechanism_name" => {"title" => "Login Mechanism Name", "type" => "string", "description" => "The Login Mechanism Name is used for user-facing copy. For instance, \"Sign up with {login_mechanism_name}.\"."}}}, "integration_onze_stad_app" => {"type" => "object", "description" => "Allow posting ideas to Onze StadApp as news.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["app_id", "api_key"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}, "app_id" => {"title" => "App ID", "type" => "string", "private" => true}, "api_key" => {"title" => "API Key", "type" => "string", "private" => true}}}, "maps" => {"type" => "object", "title" => "CustomMaps", "description" => "Enable maps for all projects.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "tile_provider" => {"title" => "Tile provider", "description" => "The OSM compatible tile provider URL pattern (https is required).", "type" => "string", "pattern" => "^https://.+", "default" => "https://api.maptiler.com/maps/basic/{z}/{x}/{y}.png?key=R0U21P01bsRLx7I7ZRqp"}, "map_center" => {"title" => "Map Center", "description" => "The default center point of the platform maps (latitude/longitude). Use a dot as a decimal separator.", "type" => "object", "additionalProperties" => false, "properties" => {"lat" => {"title" => "Latitude", "type" => "string", "default" => "50.8503"}, "long" => {"title" => "Longitude", "type" => "string", "default" => "4.3517"}}}, "zoom_level" => {"type" => "number", "title" => "Map Zoom Level", "description" => "The zoom level of the platform maps. The Zoom Level should be a number between 0 - 19. The default zoom level is 12 (town). See https://wiki.openstreetmap.org/wiki/Zoom_levels for more information about zoom levels.", "default" => 12}, "osm_relation_id" => {"type" => "integer", "title" => "OSM Relation ID", "description" => "The boundary of the municipality/organisation is specified by its Relation ID in OpenStreetMap (OSM). You can find the Relation ID at https://www.openstreetmap.org. Search for the place, click on the correct result and you'll find the Relation ID if the result is a relation (e.g. \"Relation: Knokke-Heist (4569)\"). If there is no relation defined for the place (e.g. Scheveningen), search for the next largest administrative territory (e.g. The Hague)."}}}, "intercom" => {"type" => "object", "title" => "Intercom Integration", "description" => "Integrates Intercom messenger and data collection", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "segment" => {"type" => "object", "title" => "Segment Integration", "description" => "Integrates segment data collection", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}, "destinations" => {"type" => "string", "description" => "As more tools can be activated through Segment, here you can specify them using comma separated text, shown in the cookie consent"}}}, "satismeter" => {"type" => "object", "title" => "Satismeter Integration", "description" => "Integrates Satismeter polls and data collection to the front-end", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["write_key"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "write_key" => {"type" => "string", "description" => "The write key the front-end send its data to.", "default" => "QJHRRSiX3ER3foZa"}}}, "google_analytics" => {"type" => "object", "title" => "Google Analytics Integration", "description" => "Integrates Google Analytics data collection to the front-end", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["tracking_id"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "tracking_id" => {"type" => "string", "description" => "The tracking ID the front-end send it's data to. Format UA-XXXXXXXXX-XX", "pattern" => "^(UA|YT|MO)-[0-9]+-[0-9]+$", "default" => "UA-101738826-16"}}}, "participatory_budgeting" => {"type" => "object", "title" => "Participatory Budgeting", "description" => "Allow participatory budgeting.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "polls" => {"type" => "object", "title" => "Polls", "description" => "Allow polls.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "initiatives" => {"type" => "object", "title" => "Proposals", "description" => "Allow proposals.", "additionalProperties" => false, "required-settings" => ["voting_threshold", "days_limit", "threshold_reached_message", "eligibility_criteria", "success_stories"], "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "voting_threshold" => {"title" => "Voting Threshold", "description" => "Default value for how many votes a proposal needs to move to the next stage. This value can be changed in the admin panel on the platform.", "type" => "integer", "minimum" => 2, "default" => 300}, "days_limit" => {"title" => "Time Limit (in days)", "description" => "Default value for how many days a proposal has to meet the voting threshold and move to the next stage. This value can be changed in the admin panel on the platform.", "type" => "integer", "minimum" => 1, "default" => 90}, "threshold_reached_message" => {"title" => "Proposal Success Message", "description" => "Default text that users receive when their proposal reaches the voting threshold. Supports HTML paragraphs and breaks. This text can be changed in the admin panel on the platform.", "$ref" => "#/definitions/multiloc_string", "default" => {"en" => "<p>The initiators are invited to present their initiative on the next council meeting. We will provide an official update.</p>\n", "ar-SA" => "<p>تمت دعوة المبادرين لتقديم مُقترحهم في اجتماع المجلس القادم. سنقدم تحديثًا رسميًا بذلك.</p>\n", "en-GB" => "<p>The initiators are invited to present their proposal at the next council meeting. We will provide an official update.</p>\n", "en-CA" => "<p>The initiators are invited to present their proposal at the next council meeting. We will provide an official update.</p>\n", "nl-BE" => "<p>De initiatiefnemers worden uitgenodigd om hun voorstel te komen voorstellen op de volgende gemeenteraad, waarop een officiële reactie volgt.</p>\n", "nl-NL" => "<p>De initiatiefnemers worden uitgenodigd om hun initiatief te komen voorstellen op de volgende gemeenteraad, waarop een officiële reactie volgt.</p>\n", "fr-BE" => "<p>Les porteurs de projets sont invités à présenter leur proposition à la prochaine réunion du conseil. Nous fourniront une mise à jour officielle.</p>\n", "fr-FR" => "<p>Les porteurs de projets sont invités à présenter leur proposition à la prochaine réunion du conseil. Nous fourniront une mise à jour officielle.</p>\n", "de-DE" => "<p>Die Initiatoren sind eingeladen, ihre Vorschlag bei der nächsten Stadtratssitzung zu präsentieren. Wir werden ein offizielles Update veröffentlichen.</p>\n", "it-IT" => "<p>I promotori sono invitati a presentare la loro proposta alla prossima riunione del consiglio. Forniremo un aggiornamento ufficiale.</p>\n", "da-DK" => "<p> Tagerne er inviteret til at præsentere deres borgerforslag på næste rådsmøde. Vi bringer en officiel opdatering. </p>\n", "nb-NO" => "<p>The initiators are invited to present their initiative on the next council meeting. We will provide an official update.</p>\n", "es-ES" => "<p>Se invita a los iniciadores a presentar su propuesta en la próxima reunión del consejo. Proporcionaremos una actualización oficial.</p>\n", "es-CL" => "<p>Se invita a los iniciadores a presentar su propuesta en la próxima reunión del consejo. Proporcionaremos una actualización oficial.</p>\n", "pl-PL" => "<p>Inicjatorzy są proszeni o przedstawienie swojej propozycji na następnym posiedzeniu rady. Przedstawimy oficjalną aktualizację.</p>\n", "hu-HU" => "<p>The initiators are invited to present their proposal at the next council meeting. We will provide an official update.</p>\n", "kl-GL" => "<p> Tagerne er inviteret til at præsentere deres borgerforslag på næste rådsmøde. Vi bringer en officiel opdatering. </p>\n", "ro-RO" => "<p> Inițiatorii sunt invitați să își prezinte propunerea la următoarea ședință de consiliu local. Vom oferi o actualizare oficială. </p>\n", "pt-BR" => "<p>Os iniciadores são convidados a apresentar a sua proposta na próxima reunião do conselho. Nós forneceremos uma atualização oficial.</p>\n", "mi" => "<p>The initiators are invited to present their proposal at the next council meeting. We will provide an official update.</p>\n", "sr-Latn" => "<p>The initiators are invited to present their proposal at the next council meeting. We will provide an official update.</p>\n"}}, "eligibility_criteria" => {"title" => "Proposal Criteria", "description" => "Default text specifying criteria that proposals should meet. Supports HTML paragraphs and breaks. This text can be changed in the admin panel on the platform.", "$ref" => "#/definitions/multiloc_string", "default" => {"en" => "<p>The initiative should</p> <p>- be within the city's competences</p>\n", "ar-SA" => "<ul> <li> يجب أن تندرج ضمن مجالات وكفاءات السياسة المحلية</li> <li> يجب أن تخدم المصلحة العامة وليس مصلحتك الفردية</li> <li> يجب ألّا تقوم بالتمييز على أساس الجنس، العرق أو العمر أو الخلفية</li> <li>يجب ألّا تؤذي الآخرين</li> </ul>\n", "en-GB" => "<ul> <li>It must fall within the policy areas and competencies of local policy</li> <li>It serves the public interest rather than your individual interest</li> <li>It does not discriminate based on gender, race, age, or background</li> <li>It does not harm others</li> </ul>\n", "en-CA" => "<ul> <li>It must fall within the policy areas and competencies of local policy</li> <li>It serves the public interest rather than your individual interest</li> <li>It does not discriminate based on gender, race, age, or background</li> <li>It does not harm others</li> </ul>\n", "nl-BE" => "<ul> <li>Het moet binnen de competenties van het lokale beleid vallen</li> <li>Het dient het algemeen belang in plaats van jouw individueel belang</li> <li>Het discrimineert niet op basis van geslacht, ras, leeftijd of achtergrond</li> <li>Het brengt anderen geen schade toe</li> </ul>\n", "nl-NL" => "<ul> <li>Het moet binnen de competenties van het lokale beleid vallen</li> <li>Het dient het algemeen belang in plaats van jouw individueel belang</li> <li>Het discrimineert niet op basis van geslacht, ras, leeftijd of achtergrond</li> <li>Het brengt anderen geen schade toe</li> </ul>\n", "fr-BE" => "<ul> <li>Doit s’inscrire dans les compétences de l’autorité locale</li> <li>Doit servir l’intérêt général plutôt que votre intérêt personnel</li> <li>Ne peut pas être discriminatoire en terme de sexe, de race, d’âge ou d’origine</li> <li>Ne peut pas nuire à autrui</li></ul>\n", "fr-FR" => "<ul> <li>Doit s’inscrire dans les compétences de l’autorité locale</li> <li>Doit servir l’intérêt général plutôt que votre intérêt personnel</li> <li>Ne peut pas être discriminatoire en terme de sexe, de race, d’âge ou d’origine</li> <li>Ne peut pas nuire à autrui</li></ul>\n", "de-DE" => "<ul> <li>Es muss in die Politikbereiche und Kompetenzen des lokalen Politiks fallen.</li> <li>Es dient eher dem öffentlichen als dem individuellen Interesse</li> <li>Es diskriminiert nicht aufgrund von Geschlecht, Rasse, Alter oder Hintergrund.</li> <li>Es schadet anderen nicht</li></ul>\n", "it-IT" => "<ul> <li>Deve rientrare nei settori e nelle competenze della politica locale</li> <li>Serve l'interesse pubblico piuttosto che il tuo interesse individuale</li> <li>Non discrimina in base al sesso, razza, età o provenienza</li> <li>Non danneggia gli altri</li> </ul>\n", "da-DK" => "<ul> <li>Det skal falde inden for kommunens politikområder og kompetencer</li> <li>Det tjener den offentlige interesse snarere end din individuelle interesse</li> <li>Det diskriminerer ikke andre borgere i forhold til køn, race, alder eller baggrund</li> <li>Det skader ikke andre</li></ul>\n", "nb-NO" => "<p>The initiative should</p> <p>- be within the city's competences</p>\n", "es-ES" => "<ul> <li>Debe estar dentro de las áreas y competencias de la política local</li> <li>Es de interés público más que un interés particular.</li> <li>No discrimina en base a género, raza, edad u origen...</li> <li>No daña a los demás</li> </ul>\n", "es-CL" => "<ul> <li>Debe estar dentro de las áreas y competencias de la política local</li> <li>Es de interés público más que un interés particular.</li> <li>No discrimina en base a género, raza, edad u origen...</li> <li>No daña a los demás</li> </ul>\n", "pl-PL" => "<ul> <li>To musi wchodzić w zakres obszarów i kompetencji polityki lokalnej</li> <li>Służy interesowi publicznemu, a nie indywidualnemu</li> <li>Nie dyskryminuje ze względu na płeć, rasa, wiek lub pochodzenie</li> <li>Nie szkodzi innym</li> </ul>\n", "hu-HU" => "<ul> <li>It must fall within the policy areas and competencies of local policy</li> <li>It serves the public interest rather than your individual interest</li> <li>It does not discriminate based on gender, race, age, or background</li> <li>It does not harm others</li> </ul>\n", "kl-GL" => "Kommunimi politikkeqarfiit piginnaasallu iluaniissaaq. Tamanna illit nammineq soqutigisat pinnagu tamat soqutigisaannut iluaqutaassaaq. Innuttaasut allat arnat angutillu, sumi inunngorsimaneq, ukiut imaluunniit tunuliaqutaasut piinnarlugit assigiinngisitsisoqarneq ajorpoq. Allanut ajoqutaanngilaq.\n", "ro-RO" => "<ul> <li> Trebuie să se încadreze în domeniile și competențele administrației locale </li> <li> Servește interesul public și nu interesul dvs. personal </li> <li> Nu face discriminări în funcție de sex, rasă, vârstă sau origine </li> <li> Nu dăunează altora </li> </ul>\n", "pt-BR" => "<ul> <li>Deve enquadrar-se nas áreas de política e competências da política local</li> <li>Serve o interesse público e não o seu interesse individual</li> <li>Não discrimina com base no género, raça, idade ou origem</li> <li>Não prejudica os outros</li> </ul>\n", "mi" => "<ul> <li>It must fall within the policy areas and competencies of local policy</li> <li>It serves the public interest rather than your individual interest</li> <li>It does not discriminate based on gender, race, age, or background</li> <li>It does not harm others</li> </ul>\n", "sr-Latn" => "<ul> <li>It must fall within the policy areas and competencies of local policy</li> <li>It serves the public interest rather than your individual interest</li> <li>It does not discriminate based on gender, race, age, or background</li> <li>It does not harm others</li> </ul>\n"}}, "success_stories" => {"type" => "array", "title" => "Proposal Success Stories", "description" => "Link to other pages that highlight prior success stories and examples that users can refer to.", "default" => [], "items" => {"type" => "object", "additionalProperties" => false, "required" => ["page_slug", "location", "image_url"], "properties" => {"page_slug" => {"type" => "string"}, "location" => {"type" => "string"}, "image_url" => {"type" => "string", "format" => "uri"}}}}}}, "surveys" => {"type" => "object", "title" => "Surveys", "description" => "Allow Typeform surveys to be embedded.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "typeform_surveys" => {"type" => "object", "title" => "Typeform Surveys", "description" => "Allow Typeform surveys to be embedded.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "user_token" => {"title" => "User Token", "description" => "The user token is generated from the tenant's typeform profile. Survey results are only downloadable for this token.", "type" => "string", "private" => true, "default" => "somefaketypeformusertoken"}}}, "google_forms_surveys" => {"type" => "object", "title" => "Google Forms Surveys", "description" => "Allow Google Form surveys to be embedded.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "enalyzer_surveys" => {"type" => "object", "title" => "Enalyzer Forms Surveys", "description" => "Allow Enalyzer surveys to be embedded.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "survey_xact_surveys" => {"type" => "object", "title" => "Survey Xact Forms Surveys", "description" => "Allow Survey Xact surveys to be embedded.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "surveymonkey_surveys" => {"type" => "object", "title" => "Surveymonkey Surveys", "description" => "Allow the embedding of Surveymonkey surveys. Deprecated, since not supported on mobile.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "qualtrics_surveys" => {"type" => "object", "title" => "Qualtrics Surveys", "description" => "Allow Qualtrics surveys to be embedded.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "volunteering" => {"type" => "object", "title" => "Volunteering", "description" => "Allow volunteering.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "workshops" => {"title" => "Workshops", "type" => "object", "description" => "Allow workshops.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "project_reports" => {"type" => "object", "title" => "Project Reports", "description" => "Browse and download the results of a project.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "blocking_profanity" => {"type" => "object", "title" => "Block Profanity", "description" => "Prevent input with profanity in it from being posted (can be turned on/off from the platform)", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => false}}}, "clustering" => {"type" => "object", "title" => "Clusterings Configuration", "description" => "Adds an extra method to classify inputs with nlp.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "similar_ideas" => {"type" => "object", "title" => "Similar Ideas", "description" => "Show links to similar ideas when viewing an idea. Still in beta.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "admin_project_templates" => {"type" => "object", "title" => "Project Templates", "description" => "Enable the template library for admin to create new projects.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "custom_accessibility_statement_link" => {"type" => "object", "title" => "Custom A11y Statement Link", "description" => "Allows the Front-End to direct the user to a different accessibility statement link than our own.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["url"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}, "url" => {"title" => "URL", "description" => "The link to the page to which users should be redirected when clicking on the accessibility statement link within the footer.", "type" => "string", "format" => "uri"}}}, "idea_custom_fields" => {"type" => "object", "title" => "Custom Idea Fields", "description" => "Admin and project managers can specify which idea form fields to enable/disable or make mandatory.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "ideas_overview" => {"type" => "object", "title" => "Idea Overview", "description" => "Create a page with all the ideas in a single overview page (mobile and desktop).", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => false}}}, "disable_downvoting" => {"type" => "object", "title" => "Disable Downvoting", "description" => "Ideas and proposals cannot be downvoted, only upvoted.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "ideaflow_social_sharing" => {"type" => "object", "title" => "Share Proposals on Social Media", "description" => "After posting a proposal, users receive a pop-up to share their proposal on social media.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "initiativeflow_social_sharing" => {"type" => "object", "title" => "Share Initiative on Social Media", "description" => "After posting an initiative, users receive a pop-up to share their proposal on social media.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "widgets" => {"type" => "object", "title" => "Widgets", "description" => "Admins can generate platform widgets to embed on external websites.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "manual_emailing" => {"type" => "object", "title" => "Manual Emails", "description" => "Admin and project managers can email users through the platform.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "automated_emailing_control" => {"type" => "object", "title" => "Automated Emails", "description" => "Admin can set and control automated e-mail campaigns and notifications.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "pages" => {"type" => "object", "title" => "Custom Pages", "description" => "Allow custom pages to be made and added to the platform's navigation.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "events_widget" => {"type" => "object", "title" => "Events Landing Page Widget", "description" => "Display a widget of the next upcoming events in your landing page.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}, "widget_title" => {"$ref" => "#/definitions/multiloc_string"}}}, "redirects" => {"type" => "object", "title" => "URL redirection rules", "description" => "Define redirection rules on certain targets", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "rules" => {"type" => "array", "default" => [], "items" => {"type" => "object", "required" => ["path", "target"], "additionalProperties" => false, "properties" => {"path" => {"type" => "string", "description" => "The URL path that should trigger the redirect. This is the part after the locale. For e.g. https://my-platform.com/en-GB/projects/my-project, the path would be projects/my-project."}, "target" => {"type" => "string", "description" => "The URL where the path should redirected to, e.g. https://google.com"}}}}}}, "abbreviated_user_names" => {"type" => "object", "title" => "Abbreviated User Name", "description" => "NOTE: Once you have selected this option, you cannot change it back. User names are shown on the platform as first name + first initial (Jane D. instead of Jane Doe).", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => false}}}, "manual_tagging" => {"type" => "object", "title" => "Manual Tagging", "description" => "Allows to manually analyze text inputs", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "automatic_tagging" => {"type" => "object", "title" => "Automatic Tagging", "description" => "Allows to automatically analyze text inputs", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "idea_custom_copy" => {"type" => "object", "title" => "Idea Custom Copy", "description" => "Allows the changing of the word `idea` as the default term of input.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "idea_author_change" => {"type" => "object", "title" => "Idea Author Change", "description" => "Allows city admins to create ideas and assign users as their authors.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "private_projects" => {"type" => "object", "title" => "Private projects", "description" => "Make projects visible to certain groups only (Access Rights tab in the Admin panel).", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "events_page" => {"type" => "object", "title" => "Events Page", "description" => "Enables a Page where users can view future and past events happening across projects.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => false}, "navbar_link" => {"$ref" => "#/definitions/multiloc_string"}, "past_section_title" => {"$ref" => "#/definitions/multiloc_string"}, "future_section_title" => {"$ref" => "#/definitions/multiloc_string"}}}, "fragments" => {"type" => "object", "title" => "Fragments", "description" => "Internal system to allow specific pieces of UI to be overridden with custom HTML.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["enabled_fragments"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}, "enabled_fragments" => {"title" => "Enabled Fragments", "type" => "array", "default" => [], "description" => "List of fragment names that should be enabled (e.g., 'signed-out-header').", "items" => {"type" => "string"}}}}, "project_visibility" => {"type" => "object", "title" => "Project Visibility", "description" => "Admin can make projects visible only to certain groups of users (e.g., admin only, smart groups).", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "user_confirmation" => {"type" => "object", "title" => "User Account Confirmation", "description" => "Add email confirmation functionality to users.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "custom_idea_statuses" => {"type" => "object", "title" => "Custom Idea Statuses", "description" => "Allows admin to define custom idea statuses.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "custom_maps" => {"type" => "object", "title" => "Custom Map Configuration", "description" => "Adds an extra tab to the project settings where admins can customize the project map.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "custom_style" => {"type" => "object", "title" => "Custom style", "description" => "Admins can specify additional styling options.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "custom_topics" => {"type" => "object", "title" => "Custom Topics", "description" => "Admin and project managers can customize idea topics.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "flag_inappropriate_content" => {"type" => "object", "title" => "Flag Inappropriate Content", "description" => "Automatically detect inappropriate content posted to the platform using Natural Language Processing.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "geographic_dashboard" => {"type" => "object", "title" => "Geographic Dashboard", "description" => "Shows a map with automatically detected idea locations. PoC, not yet stable.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "google_tag_manager" => {"type" => "object", "title" => "Google Tag Manager Integration", "description" => "Enables integrating to google tag manager\n", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "destinations" => {:type => "string", :description => "As more tools can be activated through GTM, here you can specify them using comma separated text, shown in the cookie consent"}, "container_id" => {:type => "string", :description => "The unique ID of your GTM workspace, format GTM-XXXXXXX", :pattern => "^GTM-[A-Z0-9]{1,7}$", :default => "GTM-KBM5894"}, "category" => {:type => "string", :description => "In which category should GTM appear in the consent manager ?", :enum => ["advertising", "analytics", "functional"], :default => "analytics"}}}, "granular_permissions" => {"type" => "object", "title" => "Granular Permissions", "description" => "Admin can specify permissions for specific projects and project phases (e.g., who can post, vote, etc.).", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "franceconnect_login" => {"type" => "object", "title" => "FranceConnect Login", "description" => "Allow users to authenticate and verify with a FranceConnect account.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["environment", "identifier", "secret"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "environment" => {:type => "string", :title => "Environment", :description => "Live on the production FranceConnect environment or still testing on their integration environment?", :enum => ["production", "integration"], :default => "production", :private => true}, "identifier" => {:title => "Identifier", :type => "string", :private => true}, "secret" => {:title => "Secret Key", :type => "string", :private => true}}}, "idea_assignment" => {"type" => "object", "title" => "Assign Ideas", "description" => "Ideas can be assigned to specific admin and project managers to respond to.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "insights_manual_flow" => {"type" => "object", "title" => "Manual insights flow", "description" => "[WARNING: experimental - do not enable this feature on production platforms] Manual reporting flow: from inputs to insights", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => false}, "enabled" => {"type" => "boolean", "default" => false}}}, "machine_translations" => {"type" => "object", "title" => "Machine Translations", "description" => "Allows users to see translated content.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "matomo" => {"type" => "object", "title" => "Matomo Integration", "description" => "Enables sending front-end events to matomo for analytics\n", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "tenant_site_id" => {:type => "string", :description => "The unique ID of the matomo site tracking this tenant.", :default => "28"}, "product_site_id" => {:type => "string", :description => "The unique ID of the matomo site tracking this tenant for product analytics", :default => "21"}}}, "moderation" => {"type" => "object", "title" => "Moderation", "description" => "Moderations are pieces of user-generated content that need to be moderated.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "project_folders" => {"type" => "object", "title" => "Project Folders", "description" => "Allow project folders.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "project_management" => {"type" => "object", "title" => "Project Managers", "description" => "Enable the project manager role (users who have some administrative rights at a project level).", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "smart_groups" => {"type" => "object", "title" => "Smart Groups", "description" => "Users can automatically be assigned to a group based on certain criteria.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "user_custom_fields" => {"type" => "object", "title" => "Custom Registration Fields", "description" => "Allow admins to define custom registration fields.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}}}, "verification" => {"type" => "object", "title" => "Verification", "description" => "Use a pre-defined list to verify user identities during registration.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["verification_methods"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "verification_methods" => {:title => "Verification Methods", :private => true, :type => "array", :default => [], :items => {:anyOf => [{:type => "object", :title => "auth0", :required => ["name", :client_id, :client_secret, :domain, :method_name_multiloc], :properties => {:name => {:type => "string", :enum => ["auth0"], :default => "auth0", :readOnly => true}, :client_id => {:type => "string", :private => "true"}, :client_secret => {:type => "string", :private => "true"}, :domain => {:type => "string", :private => "true"}, :method_name_multiloc => {:$ref => "#/definitions/multiloc_string", :private => true}}}, {:type => "object", :title => "bogus", :required => ["name"], :properties => {:name => {:type => "string", :enum => ["bogus"], :default => "bogus", :readOnly => true}}}, {:type => "object", :title => "bosa_fas", :required => ["name", :environment, :identifier, :secret], :properties => {:name => {:type => "string", :enum => ["bosa_fas"], :default => "bosa_fas", :readOnly => true}, :environment => {:type => "string", :private => "true"}, :identifier => {:type => "string", :private => "true"}, :secret => {:type => "string", :private => "true"}}}, {:type => "object", :title => "clave_unica", :required => ["name", :client_id, :client_secret], :properties => {:name => {:type => "string", :enum => ["clave_unica"], :default => "clave_unica", :readOnly => true}, :client_id => {:type => "string", :private => "true"}, :client_secret => {:type => "string", :private => "true"}}}, {:type => "object", :title => "cow", :required => ["name", :api_username, :api_password, :rut_empresa], :properties => {:name => {:type => "string", :enum => ["cow"], :default => "cow", :readOnly => true}, :api_username => {:type => "string", :private => "true"}, :api_password => {:type => "string", :private => "true"}, :rut_empresa => {:type => "string", :private => "true"}}}, {:type => "object", :title => "franceconnect", :required => ["name"], :properties => {:name => {:type => "string", :enum => ["franceconnect"], :default => "franceconnect", :readOnly => true}}}, {:type => "object", :title => "gent_rrn", :required => ["name", :api_key, :environment, :custom_field_key, :wijk_mapping], :properties => {:name => {:type => "string", :enum => ["gent_rrn"], :default => "gent_rrn", :readOnly => true}, :api_key => {:type => "string", :private => "true"}, :environment => {:type => "string", :enum => ["dv", "qa", "production"], :private => true}, :custom_field_key => {:type => "string", :description => "The key of the custom field that stores the \"wijk\"", :private => true}, :wijk_mapping => {:type => "object", :description => "Maps wijknummers (see https://data.stad.gent/explore/dataset/stadswijken-gent/table/) to custom_field_value keys", :properties => {"1" => {:type => "string"}, "2" => {:type => "string"}, "3" => {:type => "string"}, "4" => {:type => "string"}, "5" => {:type => "string"}, "6" => {:type => "string"}, "7" => {:type => "string"}, "8" => {:type => "string"}, "9" => {:type => "string"}, "10" => {:type => "string"}, "11" => {:type => "string"}, "12" => {:type => "string"}, "13" => {:type => "string"}, "14" => {:type => "string"}, "15" => {:type => "string"}, "16" => {:type => "string"}, "17" => {:type => "string"}, "18" => {:type => "string"}, "19" => {:type => "string"}, "20" => {:type => "string"}, "21" => {:type => "string"}, "22" => {:type => "string"}, "23" => {:type => "string"}, "24" => {:type => "string"}}, :additionalProperties => false, :private => true}}}, {:type => "object", :title => "id_card_lookup", :required => ["name", :method_name_multiloc, :card_id_multiloc, :card_id_tooltip_multiloc, :card_id_placeholder, :explainer_image_url], :properties => {:name => {:type => "string", :enum => ["id_card_lookup"], :default => "id_card_lookup", :readOnly => true}, :method_name_multiloc => {:$ref => "#/definitions/multiloc_string", :private => true}, :card_id_multiloc => {:$ref => "#/definitions/multiloc_string", :private => true}, :card_id_tooltip_multiloc => {:$ref => "#/definitions/multiloc_string", :private => true}, :card_id_placeholder => {:type => "string", :private => "true"}, :explainer_image_url => {:type => "string", :private => "true"}}}]}}}}, "dummy_feature" => {"type" => "object", "title" => "Dummy feature", "description" => "Oh my... such a good feature.", "additionalProperties" => false, "required" => ["allowed", "enabled"], "required-settings" => ["dummy setting"], "properties" => {"allowed" => {"type" => "boolean", "default" => true}, "enabled" => {"type" => "boolean", "default" => true}, "dummy setting" => {"type" => "boolean"}}}}, "dependencies" => {"typeform_surveys" => ["surveys"], "google_forms_surveys" => ["surveys"], "enalyzer_surveys" => ["surveys"], "survey_xact_surveys" => ["surveys"], "surveymonkey_surveys" => ["surveys"], "qualtrics_surveys" => ["surveys"], "automatic_tagging" => ["manual_tagging"], "flag_inappropriate_content" => ["moderation"]}, "definitions" => {"multiloc_string" => {"type" => "object", "additionalProperties" => false, "properties" => {"en" => {"type" => "string"}, "ar-SA" => {"type" => "string"}, "en-GB" => {"type" => "string"}, "en-CA" => {"type" => "string"}, "nl-BE" => {"type" => "string"}, "nl-NL" => {"type" => "string"}, "fr-BE" => {"type" => "string"}, "fr-FR" => {"type" => "string"}, "de-DE" => {"type" => "string"}, "it-IT" => {"type" => "string"}, "da-DK" => {"type" => "string"}, "nb-NO" => {"type" => "string"}, "es-ES" => {"type" => "string"}, "es-CL" => {"type" => "string"}, "pl-PL" => {"type" => "string"}, "hu-HU" => {"type" => "string"}, "kl-GL" => {"type" => "string"}, "ro-RO" => {"type" => "string"}, "pt-BR" => {"type" => "string"}, "mi" => {"type" => "string"}, "sr-Latn" => {"type" => "string"}}}}}
      is expected to eq {"additionalProperties"=>false, "description"=>"Oh my... such a good feature.", "properties"=>{"allow...ed", "enabled"], "required-settings"=>["dummy setting"], "title"=>"Dummy feature", "type"=>"object"}
  without extension features
    .json_schema
      is expected to be empty
      is expected to match {"description"=>"Schema for validating the settings on a tenant", "type"=>"object", "required"=>["core"], "additionalProperties"=>false, "properties"=>{"core"=>{"type"=>"object", "title"=>"Core system", "description"=>"The container for general settings. The core system should always be enabled.", "required-settings"=>["organization_type", "timezone", "currency", "locales", "color_main", "color_secondary", "color_text", "lifecycle_stage"], "additionalProperties"=>false, "required"=>["allowed", "enabled", "lifecycle_stage"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "organization_name"=>{"title"=>"Organisation Name", "description"=>"How the city or organisation is referred to throughout the platform.", "$ref"=>"#/definitions/multiloc_string"}, "organization_site"=>{"title"=>"Organisation Website", "description"=>"The city or organisation's official website.", "type"=>"string", "pattern"=>"^$|^((http://.+)|(https://.+))"}, "organization_type"=>{"title"=>"Organisation Type", "description"=>"Based on city's population: <40k small, 40-120k medium, >120k large. Otherwise, select 'generic'.", "type"=>"string", "enum"=>["small_city", "medium_city", "large_city", "generic"], "default"=>"medium_city"}, "lifecycle_stage"=>{"title"=>"Lifecycle Stage", "description"=>"The lifecycle stage of the customer.", "type"=>"string", "enum"=>["trial", "expired_trial", "demo", "active", "churned", "not_applicable"]}, "timezone"=>{"title"=>"Time Zone", "type"=>"string", "default"=>"Brussels", "enum"=>["Edinburgh", "Lisbon", "London", "Monrovia", "UTC", "Amsterdam", "Belgrade", "Berlin", "Bern", "Bratislava", "Brussels", "Budapest", "Casablanca", "Copenhagen", "Dublin", "Ljubljana", "Madrid", "Paris", "Prague", "Rome", "Sarajevo", "Skopje", "Stockholm", "Vienna", "Warsaw", "Zagreb", "Zurich", "West Central Africa", "Athens", "Bucharest", "Helsinki", "Jerusalem", "Kyiv", "Riga", "Sofia", "Tallinn", "Vilnius", "Cairo", "Harare", "Kaliningrad", "Pretoria", "Baghdad", "Istanbul", "Kuwait", "Minsk", "Moscow", "Nairobi", "Riyadh", "St. Petersburg", "Tehran", "Abu Dhabi", "Baku", "Muscat", "Samara", "Tbilisi", "Volgograd", "Yerevan", "Kabul", "Ekaterinburg", "Islamabad", "Karachi", "Tashkent", "Chennai", "Kolkata", "Mumbai", "New Delhi", "Sri Jayawardenepura", "Kathmandu", "Almaty", "Astana", "Dhaka", "Urumqi", "Rangoon", "Bangkok", "Hanoi", "Jakarta", "Krasnoyarsk", "Novosibirsk", "Beijing", "Chongqing", "Hong Kong", "Irkutsk", "Kuala Lumpur", "Perth", "Singapore", "Taipei", "Ulaanbaatar", "Osaka", "Sapporo", "Seoul", "Tokyo", "Yakutsk", "Adelaide", "Darwin", "Canberra", "Hobart", "Melbourne", "Sydney", "Brisbane", "Guam", "Port Moresby", "Vladivostok", "Magadan", "New Caledonia", "Solomon Is.", "Srednekolymsk", "Auckland", "Fiji", "Wellington", "Kamchatka", "Marshall Is.", "Chatham Is.", "Samoa", "Nuku'alofa", "Tokelau Is.", "Azores", "Cape Verde Is.", "Mid-Atlantic", "Brasilia", "Greenland", "Buenos Aires", "Montevideo", "Newfoundland", "Atlantic Time (Canada)", "Santiago", "Caracas", "Georgetown", "La Paz", "Puerto Rico", "Eastern Time (US & Canada)", "Indiana (East)", "Bogota", "Lima", "Quito", "Central Time (US & Canada)", "Guadalajara", "Mexico City", "Monterrey", "Central America", "Saskatchewan", "Chihuahua", "Mazatlan", "Mountain Time (US & Canada)", "Arizona", "Pacific Time (US & Canada)", "Tijuana", "Alaska", "Hawaii", "American Samoa", "Midway Island", "International Date Line West"], "enumNames"=>["UTC+0000 (DST) - Edinburgh", "UTC+0000 (DST) - Lisbon", "UTC+0000 (DST) - London", "UTC+0000 - Monrovia", "UTC+0000 - UTC", "UTC+0100 (DST) - Amsterdam", "UTC+0100 (DST) - Belgrade", "UTC+0100 (DST) - Berlin", "UTC+0100 (DST) - Bern", "UTC+0100 (DST) - Bratislava", "UTC+0100 (DST) - Brussels", "UTC+0100 (DST) - Budapest", "UTC+0100 (DST) - Casablanca", "UTC+0100 (DST) - Copenhagen", "UTC+0100 (DST) - Dublin", "UTC+0100 (DST) - Ljubljana", "UTC+0100 (DST) - Madrid", "UTC+0100 (DST) - Paris", "UTC+0100 (DST) - Prague", "UTC+0100 (DST) - Rome", "UTC+0100 (DST) - Sarajevo", "UTC+0100 (DST) - Skopje", "UTC+0100 (DST) - Stockholm", "UTC+0100 (DST) - Vienna", "UTC+0100 (DST) - Warsaw", "UTC+0100 (DST) - Zagreb", "UTC+0100 (DST) - Zurich", "UTC+0100 - West Central Africa", "UTC+0200 (DST) - Athens", "UTC+0200 (DST) - Bucharest", "UTC+0200 (DST) - Helsinki", "UTC+0200 (DST) - Jerusalem", "UTC+0200 (DST) - Kyiv", "UTC+0200 (DST) - Riga", "UTC+0200 (DST) - Sofia", "UTC+0200 (DST) - Tallinn", "UTC+0200 (DST) - Vilnius", "UTC+0200 - Cairo", "UTC+0200 - Harare", "UTC+0200 - Kaliningrad", "UTC+0200 - Pretoria", "UTC+0300 - Baghdad", "UTC+0300 - Istanbul", "UTC+0300 - Kuwait", "UTC+0300 - Minsk", "UTC+0300 - Moscow", "UTC+0300 - Nairobi", "UTC+0300 - Riyadh", "UTC+0300 - St. Petersburg", "UTC+0330 (DST) - Tehran", "UTC+0400 - Abu Dhabi", "UTC+0400 - Baku", "UTC+0400 - Muscat", "UTC+0400 - Samara", "UTC+0400 - Tbilisi", "UTC+0400 - Volgograd", "UTC+0400 - Yerevan", "UTC+0430 - Kabul", "UTC+0500 - Ekaterinburg", "UTC+0500 - Islamabad", "UTC+0500 - Karachi", "UTC+0500 - Tashkent", "UTC+0530 - Chennai", "UTC+0530 - Kolkata", "UTC+0530 - Mumbai", "UTC+0530 - New Delhi", "UTC+0530 - Sri Jayawardenepura", "UTC+0545 - Kathmandu", "UTC+0600 - Almaty", "UTC+0600 - Astana", "UTC+0600 - Dhaka", "UTC+0600 - Urumqi", "UTC+0630 - Rangoon", "UTC+0700 - Bangkok", "UTC+0700 - Hanoi", "UTC+0700 - Jakarta", "UTC+0700 - Krasnoyarsk", "UTC+0700 - Novosibirsk", "UTC+0800 - Beijing", "UTC+0800 - Chongqing", "UTC+0800 - Hong Kong", "UTC+0800 - Irkutsk", "UTC+0800 - Kuala Lumpur", "UTC+0800 - Perth", "UTC+0800 - Singapore", "UTC+0800 - Taipei", "UTC+0800 - Ulaanbaatar", "UTC+0900 - Osaka", "UTC+0900 - Sapporo", "UTC+0900 - Seoul", "UTC+0900 - Tokyo", "UTC+0900 - Yakutsk", "UTC+0930 (DST) - Adelaide", "UTC+0930 - Darwin", "UTC+1000 (DST) - Canberra", "UTC+1000 (DST) - Hobart", "UTC+1000 (DST) - Melbourne", "UTC+1000 (DST) - Sydney", "UTC+1000 - Brisbane", "UTC+1000 - Guam", "UTC+1000 - Port Moresby", "UTC+1000 - Vladivostok", "UTC+1100 - Magadan", "UTC+1100 - New Caledonia", "UTC+1100 - Solomon Is.", "UTC+1100 - Srednekolymsk", "UTC+1200 (DST) - Auckland", "UTC+1200 (DST) - Fiji", "UTC+1200 (DST) - Wellington", "UTC+1200 - Kamchatka", "UTC+1200 - Marshall Is.", "UTC+1245 (DST) - Chatham Is.", "UTC+1300 (DST) - Samoa", "UTC+1300 - Nuku'alofa", "UTC+1300 - Tokelau Is.", "UTC-0100 (DST) - Azores", "UTC-0100 - Cape Verde Is.", "UTC-0200 - Mid-Atlantic", "UTC-0300 (DST) - Brasilia", "UTC-0300 (DST) - Greenland", "UTC-0300 - Buenos Aires", "UTC-0300 - Montevideo", "UTC-0330 (DST) - Newfoundland", "UTC-0400 (DST) - Atlantic Time (Canada)", "UTC-0400 (DST) - Santiago", "UTC-0400 - Caracas", "UTC-0400 - Georgetown", "UTC-0400 - La Paz", "UTC-0400 - Puerto Rico", "UTC-0500 (DST) - Eastern Time (US & Canada)", "UTC-0500 (DST) - Indiana (East)", "UTC-0500 - Bogota", "UTC-0500 - Lima", "UTC-0500 - Quito", "UTC-0600 (DST) - Central Time (US & Canada)", "UTC-0600 (DST) - Guadalajara", "UTC-0600 (DST) - Mexico City", "UTC-0600 (DST) - Monterrey", "UTC-0600 - Central America", "UTC-0600 - Saskatchewan", "UTC-0700 (DST) - Chihuahua", "UTC-0700 (DST) - Mazatlan", "UTC-0700 (DST) - Mountain Time (US & Canada)", "UTC-0700 - Arizona", "UTC-0800 (DST) - Pacific Time (US & Canada)", "UTC-0800 (DST) - Tijuana", "UTC-0900 (DST) - Alaska", "UTC-1000 - Hawaii", "UTC-1100 - American Samoa", "UTC-1100 - Midway Island", "UTC-1200 - International Date Line West"]}, "currency"=>{"title"=>"Currency", "description"=>"Currency used by the organisation, for projects like participatory budgeting that have budget fields.", "type"=>"string", "default"=>"EUR", "enum"=>["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LVL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD", "SSP", "STD", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "USS", "UYI", "UYU", "UZS", "VEF", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XDR", "XFU", "XOF", "XPD", "XPF", "XPT", "XTS", "XXX", "YER", "ZAR", "ZMW"]}, "locales"=>{"title"=>"Platform Languages", "description"=>"Select all of the languages that will be in use on the platform.", "type"=>"array", "items"=>{"type"=>"string", "enum"=>["en", "ar-SA", "en-GB", "en-CA", "nl-BE", "nl-NL", "fr-BE", "fr-FR", "de-DE", "it-IT", "da-DK", "nb-NO", "es-ES", "es-CL", "pl-PL", "hu-HU", "kl-GL", "ro-RO", "pt-BR", "mi", "sr-Latn"]}, "uniqueItems"=>true, "minItems"=>1, "default"=>["en"]}, "color_main"=>{"title"=>"Main Colour", "description"=>"Main colour of platform. Input as a 6-digit HEX color, including the # sign (e.g. #073F80).", "type"=>"string", "pattern"=>"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$", "default"=>"#163A7D"}, "color_secondary"=>{"title"=>"Secondary Colour", "description"=>"Secondary colour of platform. Input as a 6-digit HEX color, including the # sign (e.g. #ff672f).", "type"=>"string", "pattern"=>"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$", "default"=>"#CF4040"}, "color_text"=>{"title"=>"Text Colour", "description"=>"Colour of platform text. Input as a 6-digit HEX color, including the # sign (e.g. #7fbbca).", "type"=>"string", "pattern"=>"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$", "default"=>"#163A7D"}, "header_title"=>{"title"=>"Homepage Title", "description"=>"The header (title) shown on the main banner of the homepage (max 45 characters).", "type"=>"object", "allOf"=>[{"$ref"=>"#/definitions/multiloc_string"}], "additionalProperties"=>{"maxLength"=>45}}, "header_slogan"=>{"title"=>"Homepage Subtitle", "description"=>"The sub-title shown on the main banner of the homepage (max 90 characters).", "type"=>"object", "allOf"=>[{"$ref"=>"#/definitions/multiloc_string"}], "additionalProperties"=>{"maxLength"=>90}}, "meta_title"=>{"title"=>"Page Title", "description"=>"The title of the homepage displayed on the browser tab in search engine results and when shared on social media.", "$ref"=>"#/definitions/multiloc_string"}, "meta_description"=>{"title"=>"Social Media Description", "description"=>"The description of the platform shown in search engine results and when shared on some social media platforms.", "$ref"=>"#/definitions/multiloc_string"}, "custom_onboarding_message"=>{"title"=>"Header Banner Call-to-Action Text", "description"=>"Optional Call-to-Action text for signed in users, shown on a banner on the top of the homepage. Accompanied by a Call-to-Action (CTA) button. If this field is left blank, 'Header banner non-call to action' text is shown in the banner.", "$ref"=>"#/definitions/multiloc_string", "private"=>true}, "custom_onboarding_button"=>{"title"=>"Header Banner CTA Button", "description"=>"Text for the CTA button in the header banner for signed-in users. Accompanies the 'Header banner call to action text' field.", "$ref"=>"#/definitions/multiloc_string", "private"=>true}, "custom_onboarding_link"=>{"title"=>"Header Banner CTA Link", "description"=>"Web location that the CTA button links to. This should be a relative link on the platform starting with (e.g., platform.citizenlab.co/initiatives should be inputted here as /initiatives).", "type"=>"string", "pattern"=>"^$|^/.*$", "private"=>true}, "custom_onboarding_fallback_message"=>{"title"=>"Header Banner Non-CTA Text", "description"=>"Optional text shown on a banner on the top of the homepage for signed in users. If this field and the 'Header Banner Call-to-Action Text' field are both left blank, the banner text defaults to \"{orgName} is listening to you. It's your turn to make your voice heard!\".", "$ref"=>"#/definitions/multiloc_string"}, "currently_working_on_text"=>{"title"=>"Project Overview Header Title", "description"=>"Header title shown at the top of all of the projects on the homepage. If left blank, this field defaults to \"{orgName} is currently working on\".", "$ref"=>"#/definitions/multiloc_string"}, "signup_helper_text"=>{"title"=>"Sign-up Helper Text (Step 1)", "description"=>"Optional short text, shown at the top of Step 1 of the sign up form (i.e., email and password). Supports HTML.", "$ref"=>"#/definitions/multiloc_string"}, "custom_fields_signup_helper_text"=>{"title"=>"Sign-up Helper Text (Step 2)", "description"=>"Optional short text, shown at the top of Step 2 of the sign up form (i.e., additional registration fields). Supports HTML.", "$ref"=>"#/definitions/multiloc_string"}, "areas_term"=>{"title"=>"Geographic Units", "description"=>"What a geographic unit should be called on this platform (e.g., neighbourhoods, districts, etc.). Input the plural form here with all lowercase letters. If left blank, this field defaults to 'areas'.", "$ref"=>"#/definitions/multiloc_string"}, "area_term"=>{"title"=>"Geographic Unit", "description"=>"What a geographic unit should be called on this platform (e.g., neighbourhood, district, etc.)? Input the singular form here with all lowercase letters. If left blank, this field defaults to 'area'.", "$ref"=>"#/definitions/multiloc_string"}, "reply_to_email"=>{"title"=>"Reply-to email", "description"=>"The email used in the reply-to field when users receive emails from automated campaigns.", "type"=>"string", "format"=>"email", "default"=>"support@citizenlab.co"}}}, "password_login"=>{"type"=>"object", "title"=>"Password Login", "description"=>"Allow users to register with an email and password.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["minimum_length", "phone"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "minimum_length"=>{"type"=>"number", "title"=>"Minimum password length", "description"=>"The minimum number of characters required for a user password. The default value is 8 (min. 5, max. 72). Longer passwords are generally more secure. Changes to the min. password length will only apply to users that create a new account or update their existing password (existing accounts remain the same).", "minimum"=>5, "maximum"=>72, "default"=>8}, "phone"=>{"title"=>"Phone", "description"=>"Allow users to register with a phone number. This option is not advised, please check with development team before enabling this field.", "type"=>"boolean", "default"=>false}, "phone_email_pattern"=>{"title"=>"Phone Number Format", "description"=>"Specify how phone numbers should be stored in the database (needs to be in email format - e.g., 'phone+__PHONE__@test.com' stores the phone number as 'phone+32478637483@test.com'.", "type"=>"string", "format"=>"email", "default"=>"phone+__PHONE__@test.com", "pattern"=>"^.*__PHONE__.*@.*$", "private"=>true}}}, "facebook_login"=>{"type"=>"object", "title"=>"Facebook Login", "description"=>"Allow users to register and sign in through their Facebook account.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["app_id"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}, "app_id"=>{"title"=>"App ID", "type"=>"string"}, "app_secret"=>{"title"=>"App Secret", "type"=>"string", "private"=>true}}}, "google_login"=>{"type"=>"object", "title"=>"Google Login", "description"=>"Allow users to register and sign in through their Google account.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["client_id", "client_secret"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}, "client_id"=>{"title"=>"Client ID", "type"=>"string"}, "client_secret"=>{"title"=>"Client Secret", "type"=>"string", "private"=>true}}}, "azure_ad_login"=>{"type"=>"object", "title"=>"Azure Login", "description"=>"Allow users to register and sign in with Azure Active Directory.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["tenant", "client_id", "logo_url", "login_mechanism_name"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}, "tenant"=>{"title"=>"Tenant", "type"=>"string", "private"=>true}, "client_id"=>{"title"=>"Client ID", "description"=>"Sometimes also called 'application_id'", "type"=>"string", "private"=>true}, "logo_url"=>{"title"=>"Logo", "type"=>"string", "pattern"=>"^https://.+", "description"=>"The full URL to the logo image that is shown on the authentication button. Logo should be approx. 25px in height."}, "login_mechanism_name"=>{"title"=>"Login Mechanism Name", "type"=>"string", "description"=>"The Login Mechanism Name is used for user-facing copy. For instance, \"Sign up with {login_mechanism_name}.\"."}}}, "integration_onze_stad_app"=>{"type"=>"object", "description"=>"Allow posting ideas to Onze StadApp as news.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["app_id", "api_key"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}, "app_id"=>{"title"=>"App ID", "type"=>"string", "private"=>true}, "api_key"=>{"title"=>"API Key", "type"=>"string", "private"=>true}}}, "maps"=>{"type"=>"object", "title"=>"CustomMaps", "description"=>"Enable maps for all projects.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "tile_provider"=>{"title"=>"Tile provider", "description"=>"The OSM compatible tile provider URL pattern (https is required).", "type"=>"string", "pattern"=>"^https://.+", "default"=>"https://api.maptiler.com/maps/basic/{z}/{x}/{y}.png?key=R0U21P01bsRLx7I7ZRqp"}, "map_center"=>{"title"=>"Map Center", "description"=>"The default center point of the platform maps (latitude/longitude). Use a dot as a decimal separator.", "type"=>"object", "additionalProperties"=>false, "properties"=>{"lat"=>{"title"=>"Latitude", "type"=>"string", "default"=>"50.8503"}, "long"=>{"title"=>"Longitude", "type"=>"string", "default"=>"4.3517"}}}, "zoom_level"=>{"type"=>"number", "title"=>"Map Zoom Level", "description"=>"The zoom level of the platform maps. The Zoom Level should be a number between 0 - 19. The default zoom level is 12 (town). See https://wiki.openstreetmap.org/wiki/Zoom_levels for more information about zoom levels.", "default"=>12}, "osm_relation_id"=>{"type"=>"integer", "title"=>"OSM Relation ID", "description"=>"The boundary of the municipality/organisation is specified by its Relation ID in OpenStreetMap (OSM). You can find the Relation ID at https://www.openstreetmap.org. Search for the place, click on the correct result and you'll find the Relation ID if the result is a relation (e.g. \"Relation: Knokke-Heist (4569)\"). If there is no relation defined for the place (e.g. Scheveningen), search for the next largest administrative territory (e.g. The Hague)."}}}, "intercom"=>{"type"=>"object", "title"=>"Intercom Integration", "description"=>"Integrates Intercom messenger and data collection", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "segment"=>{"type"=>"object", "title"=>"Segment Integration", "description"=>"Integrates segment data collection", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}, "destinations"=>{"type"=>"string", "description"=>"As more tools can be activated through Segment, here you can specify them using comma separated text, shown in the cookie consent"}}}, "satismeter"=>{"type"=>"object", "title"=>"Satismeter Integration", "description"=>"Integrates Satismeter polls and data collection to the front-end", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["write_key"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "write_key"=>{"type"=>"string", "description"=>"The write key the front-end send its data to.", "default"=>"QJHRRSiX3ER3foZa"}}}, "google_analytics"=>{"type"=>"object", "title"=>"Google Analytics Integration", "description"=>"Integrates Google Analytics data collection to the front-end", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["tracking_id"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "tracking_id"=>{"type"=>"string", "description"=>"The tracking ID the front-end send it's data to. Format UA-XXXXXXXXX-XX", "pattern"=>"^(UA|YT|MO)-[0-9]+-[0-9]+$", "default"=>"UA-101738826-16"}}}, "participatory_budgeting"=>{"type"=>"object", "title"=>"Participatory Budgeting", "description"=>"Allow participatory budgeting.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "polls"=>{"type"=>"object", "title"=>"Polls", "description"=>"Allow polls.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "initiatives"=>{"type"=>"object", "title"=>"Proposals", "description"=>"Allow proposals.", "additionalProperties"=>false, "required-settings"=>["voting_threshold", "days_limit", "threshold_reached_message", "eligibility_criteria", "success_stories"], "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "voting_threshold"=>{"title"=>"Voting Threshold", "description"=>"Default value for how many votes a proposal needs to move to the next stage. This value can be changed in the admin panel on the platform.", "type"=>"integer", "minimum"=>2, "default"=>300}, "days_limit"=>{"title"=>"Time Limit (in days)", "description"=>"Default value for how many days a proposal has to meet the voting threshold and move to the next stage. This value can be changed in the admin panel on the platform.", "type"=>"integer", "minimum"=>1, "default"=>90}, "threshold_reached_message"=>{"title"=>"Proposal Success Message", "description"=>"Default text that users receive when their proposal reaches the voting threshold. Supports HTML paragraphs and breaks. This text can be changed in the admin panel on the platform.", "$ref"=>"#/definitions/multiloc_string", "default"=>{"en"=>"<p>The initiators are invited to present their initiative on the next council meeting. We will provide an official update.</p>\n", "ar-SA"=>"<p>تمت دعوة المبادرين لتقديم مُقترحهم في اجتماع المجلس القادم. سنقدم تحديثًا رسميًا بذلك.</p>\n", "en-GB"=>"<p>The initiators are invited to present their proposal at the next council meeting. We will provide an official update.</p>\n", "en-CA"=>"<p>The initiators are invited to present their proposal at the next council meeting. We will provide an official update.</p>\n", "nl-BE"=>"<p>De initiatiefnemers worden uitgenodigd om hun voorstel te komen voorstellen op de volgende gemeenteraad, waarop een officiële reactie volgt.</p>\n", "nl-NL"=>"<p>De initiatiefnemers worden uitgenodigd om hun initiatief te komen voorstellen op de volgende gemeenteraad, waarop een officiële reactie volgt.</p>\n", "fr-BE"=>"<p>Les porteurs de projets sont invités à présenter leur proposition à la prochaine réunion du conseil. Nous fourniront une mise à jour officielle.</p>\n", "fr-FR"=>"<p>Les porteurs de projets sont invités à présenter leur proposition à la prochaine réunion du conseil. Nous fourniront une mise à jour officielle.</p>\n", "de-DE"=>"<p>Die Initiatoren sind eingeladen, ihre Vorschlag bei der nächsten Stadtratssitzung zu präsentieren. Wir werden ein offizielles Update veröffentlichen.</p>\n", "it-IT"=>"<p>I promotori sono invitati a presentare la loro proposta alla prossima riunione del consiglio. Forniremo un aggiornamento ufficiale.</p>\n", "da-DK"=>"<p> Tagerne er inviteret til at præsentere deres borgerforslag på næste rådsmøde. Vi bringer en officiel opdatering. </p>\n", "nb-NO"=>"<p>The initiators are invited to present their initiative on the next council meeting. We will provide an official update.</p>\n", "es-ES"=>"<p>Se invita a los iniciadores a presentar su propuesta en la próxima reunión del consejo. Proporcionaremos una actualización oficial.</p>\n", "es-CL"=>"<p>Se invita a los iniciadores a presentar su propuesta en la próxima reunión del consejo. Proporcionaremos una actualización oficial.</p>\n", "pl-PL"=>"<p>Inicjatorzy są proszeni o przedstawienie swojej propozycji na następnym posiedzeniu rady. Przedstawimy oficjalną aktualizację.</p>\n", "hu-HU"=>"<p>The initiators are invited to present their proposal at the next council meeting. We will provide an official update.</p>\n", "kl-GL"=>"<p> Tagerne er inviteret til at præsentere deres borgerforslag på næste rådsmøde. Vi bringer en officiel opdatering. </p>\n", "ro-RO"=>"<p> Inițiatorii sunt invitați să își prezinte propunerea la următoarea ședință de consiliu local. Vom oferi o actualizare oficială. </p>\n", "pt-BR"=>"<p>Os iniciadores são convidados a apresentar a sua proposta na próxima reunião do conselho. Nós forneceremos uma atualização oficial.</p>\n", "mi"=>"<p>The initiators are invited to present their proposal at the next council meeting. We will provide an official update.</p>\n", "sr-Latn"=>"<p>The initiators are invited to present their proposal at the next council meeting. We will provide an official update.</p>\n"}}, "eligibility_criteria"=>{"title"=>"Proposal Criteria", "description"=>"Default text specifying criteria that proposals should meet. Supports HTML paragraphs and breaks. This text can be changed in the admin panel on the platform.", "$ref"=>"#/definitions/multiloc_string", "default"=>{"en"=>"<p>The initiative should</p> <p>- be within the city's competences</p>\n", "ar-SA"=>"<ul> <li> يجب أن تندرج ضمن مجالات وكفاءات السياسة المحلية</li> <li> يجب أن تخدم المصلحة العامة وليس مصلحتك الفردية</li> <li> يجب ألّا تقوم بالتمييز على أساس الجنس، العرق أو العمر أو الخلفية</li> <li>يجب ألّا تؤذي الآخرين</li> </ul>\n", "en-GB"=>"<ul> <li>It must fall within the policy areas and competencies of local policy</li> <li>It serves the public interest rather than your individual interest</li> <li>It does not discriminate based on gender, race, age, or background</li> <li>It does not harm others</li> </ul>\n", "en-CA"=>"<ul> <li>It must fall within the policy areas and competencies of local policy</li> <li>It serves the public interest rather than your individual interest</li> <li>It does not discriminate based on gender, race, age, or background</li> <li>It does not harm others</li> </ul>\n", "nl-BE"=>"<ul> <li>Het moet binnen de competenties van het lokale beleid vallen</li> <li>Het dient het algemeen belang in plaats van jouw individueel belang</li> <li>Het discrimineert niet op basis van geslacht, ras, leeftijd of achtergrond</li> <li>Het brengt anderen geen schade toe</li> </ul>\n", "nl-NL"=>"<ul> <li>Het moet binnen de competenties van het lokale beleid vallen</li> <li>Het dient het algemeen belang in plaats van jouw individueel belang</li> <li>Het discrimineert niet op basis van geslacht, ras, leeftijd of achtergrond</li> <li>Het brengt anderen geen schade toe</li> </ul>\n", "fr-BE"=>"<ul> <li>Doit s’inscrire dans les compétences de l’autorité locale</li> <li>Doit servir l’intérêt général plutôt que votre intérêt personnel</li> <li>Ne peut pas être discriminatoire en terme de sexe, de race, d’âge ou d’origine</li> <li>Ne peut pas nuire à autrui</li></ul>\n", "fr-FR"=>"<ul> <li>Doit s’inscrire dans les compétences de l’autorité locale</li> <li>Doit servir l’intérêt général plutôt que votre intérêt personnel</li> <li>Ne peut pas être discriminatoire en terme de sexe, de race, d’âge ou d’origine</li> <li>Ne peut pas nuire à autrui</li></ul>\n", "de-DE"=>"<ul> <li>Es muss in die Politikbereiche und Kompetenzen des lokalen Politiks fallen.</li> <li>Es dient eher dem öffentlichen als dem individuellen Interesse</li> <li>Es diskriminiert nicht aufgrund von Geschlecht, Rasse, Alter oder Hintergrund.</li> <li>Es schadet anderen nicht</li></ul>\n", "it-IT"=>"<ul> <li>Deve rientrare nei settori e nelle competenze della politica locale</li> <li>Serve l'interesse pubblico piuttosto che il tuo interesse individuale</li> <li>Non discrimina in base al sesso, razza, età o provenienza</li> <li>Non danneggia gli altri</li> </ul>\n", "da-DK"=>"<ul> <li>Det skal falde inden for kommunens politikområder og kompetencer</li> <li>Det tjener den offentlige interesse snarere end din individuelle interesse</li> <li>Det diskriminerer ikke andre borgere i forhold til køn, race, alder eller baggrund</li> <li>Det skader ikke andre</li></ul>\n", "nb-NO"=>"<p>The initiative should</p> <p>- be within the city's competences</p>\n", "es-ES"=>"<ul> <li>Debe estar dentro de las áreas y competencias de la política local</li> <li>Es de interés público más que un interés particular.</li> <li>No discrimina en base a género, raza, edad u origen...</li> <li>No daña a los demás</li> </ul>\n", "es-CL"=>"<ul> <li>Debe estar dentro de las áreas y competencias de la política local</li> <li>Es de interés público más que un interés particular.</li> <li>No discrimina en base a género, raza, edad u origen...</li> <li>No daña a los demás</li> </ul>\n", "pl-PL"=>"<ul> <li>To musi wchodzić w zakres obszarów i kompetencji polityki lokalnej</li> <li>Służy interesowi publicznemu, a nie indywidualnemu</li> <li>Nie dyskryminuje ze względu na płeć, rasa, wiek lub pochodzenie</li> <li>Nie szkodzi innym</li> </ul>\n", "hu-HU"=>"<ul> <li>It must fall within the policy areas and competencies of local policy</li> <li>It serves the public interest rather than your individual interest</li> <li>It does not discriminate based on gender, race, age, or background</li> <li>It does not harm others</li> </ul>\n", "kl-GL"=>"Kommunimi politikkeqarfiit piginnaasallu iluaniissaaq. Tamanna illit nammineq soqutigisat pinnagu tamat soqutigisaannut iluaqutaassaaq. Innuttaasut allat arnat angutillu, sumi inunngorsimaneq, ukiut imaluunniit tunuliaqutaasut piinnarlugit assigiinngisitsisoqarneq ajorpoq. Allanut ajoqutaanngilaq.\n", "ro-RO"=>"<ul> <li> Trebuie să se încadreze în domeniile și competențele administrației locale </li> <li> Servește interesul public și nu interesul dvs. personal </li> <li> Nu face discriminări în funcție de sex, rasă, vârstă sau origine </li> <li> Nu dăunează altora </li> </ul>\n", "pt-BR"=>"<ul> <li>Deve enquadrar-se nas áreas de política e competências da política local</li> <li>Serve o interesse público e não o seu interesse individual</li> <li>Não discrimina com base no género, raça, idade ou origem</li> <li>Não prejudica os outros</li> </ul>\n", "mi"=>"<ul> <li>It must fall within the policy areas and competencies of local policy</li> <li>It serves the public interest rather than your individual interest</li> <li>It does not discriminate based on gender, race, age, or background</li> <li>It does not harm others</li> </ul>\n", "sr-Latn"=>"<ul> <li>It must fall within the policy areas and competencies of local policy</li> <li>It serves the public interest rather than your individual interest</li> <li>It does not discriminate based on gender, race, age, or background</li> <li>It does not harm others</li> </ul>\n"}}, "success_stories"=>{"type"=>"array", "title"=>"Proposal Success Stories", "description"=>"Link to other pages that highlight prior success stories and examples that users can refer to.", "default"=>[], "items"=>{"type"=>"object", "additionalProperties"=>false, "required"=>["page_slug", "location", "image_url"], "properties"=>{"page_slug"=>{"type"=>"string"}, "location"=>{"type"=>"string"}, "image_url"=>{"type"=>"string", "format"=>"uri"}}}}}}, "surveys"=>{"type"=>"object", "title"=>"Surveys", "description"=>"Allow Typeform surveys to be embedded.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "typeform_surveys"=>{"type"=>"object", "title"=>"Typeform Surveys", "description"=>"Allow Typeform surveys to be embedded.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "user_token"=>{"title"=>"User Token", "description"=>"The user token is generated from the tenant's typeform profile. Survey results are only downloadable for this token.", "type"=>"string", "private"=>true, "default"=>"somefaketypeformusertoken"}}}, "google_forms_surveys"=>{"type"=>"object", "title"=>"Google Forms Surveys", "description"=>"Allow Google Form surveys to be embedded.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "enalyzer_surveys"=>{"type"=>"object", "title"=>"Enalyzer Forms Surveys", "description"=>"Allow Enalyzer surveys to be embedded.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "survey_xact_surveys"=>{"type"=>"object", "title"=>"Survey Xact Forms Surveys", "description"=>"Allow Survey Xact surveys to be embedded.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "surveymonkey_surveys"=>{"type"=>"object", "title"=>"Surveymonkey Surveys", "description"=>"Allow the embedding of Surveymonkey surveys. Deprecated, since not supported on mobile.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "qualtrics_surveys"=>{"type"=>"object", "title"=>"Qualtrics Surveys", "description"=>"Allow Qualtrics surveys to be embedded.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "volunteering"=>{"type"=>"object", "title"=>"Volunteering", "description"=>"Allow volunteering.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "workshops"=>{"title"=>"Workshops", "type"=>"object", "description"=>"Allow workshops.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "project_reports"=>{"type"=>"object", "title"=>"Project Reports", "description"=>"Browse and download the results of a project.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "blocking_profanity"=>{"type"=>"object", "title"=>"Block Profanity", "description"=>"Prevent input with profanity in it from being posted (can be turned on/off from the platform)", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "clustering"=>{"type"=>"object", "title"=>"Clusterings Configuration", "description"=>"Adds an extra method to classify inputs with nlp.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "similar_ideas"=>{"type"=>"object", "title"=>"Similar Ideas", "description"=>"Show links to similar ideas when viewing an idea. Still in beta.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "admin_project_templates"=>{"type"=>"object", "title"=>"Project Templates", "description"=>"Enable the template library for admin to create new projects.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "custom_accessibility_statement_link"=>{"type"=>"object", "title"=>"Custom A11y Statement Link", "description"=>"Allows the Front-End to direct the user to a different accessibility statement link than our own.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["url"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}, "url"=>{"title"=>"URL", "description"=>"The link to the page to which users should be redirected when clicking on the accessibility statement link within the footer.", "type"=>"string", "format"=>"uri"}}}, "idea_custom_fields"=>{"type"=>"object", "title"=>"Custom Idea Fields", "description"=>"Admin and project managers can specify which idea form fields to enable/disable or make mandatory.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "ideas_overview"=>{"type"=>"object", "title"=>"Idea Overview", "description"=>"Create a page with all the ideas in a single overview page (mobile and desktop).", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "disable_downvoting"=>{"type"=>"object", "title"=>"Disable Downvoting", "description"=>"Ideas and proposals cannot be downvoted, only upvoted.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "ideaflow_social_sharing"=>{"type"=>"object", "title"=>"Share Proposals on Social Media", "description"=>"After posting a proposal, users receive a pop-up to share their proposal on social media.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "initiativeflow_social_sharing"=>{"type"=>"object", "title"=>"Share Initiative on Social Media", "description"=>"After posting an initiative, users receive a pop-up to share their proposal on social media.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "widgets"=>{"type"=>"object", "title"=>"Widgets", "description"=>"Admins can generate platform widgets to embed on external websites.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "manual_emailing"=>{"type"=>"object", "title"=>"Manual Emails", "description"=>"Admin and project managers can email users through the platform.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "automated_emailing_control"=>{"type"=>"object", "title"=>"Automated Emails", "description"=>"Admin can set and control automated e-mail campaigns and notifications.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "pages"=>{"type"=>"object", "title"=>"Custom Pages", "description"=>"Allow custom pages to be made and added to the platform's navigation.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "events_widget"=>{"type"=>"object", "title"=>"Events Landing Page Widget", "description"=>"Display a widget of the next upcoming events in your landing page.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}, "widget_title"=>{"$ref"=>"#/definitions/multiloc_string"}}}, "redirects"=>{"type"=>"object", "title"=>"URL redirection rules", "description"=>"Define redirection rules on certain targets", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "rules"=>{"type"=>"array", "default"=>[], "items"=>{"type"=>"object", "required"=>["path", "target"], "additionalProperties"=>false, "properties"=>{"path"=>{"type"=>"string", "description"=>"The URL path that should trigger the redirect. This is the part after the locale. For e.g. https://my-platform.com/en-GB/projects/my-project, the path would be projects/my-project."}, "target"=>{"type"=>"string", "description"=>"The URL where the path should redirected to, e.g. https://google.com"}}}}}}, "abbreviated_user_names"=>{"type"=>"object", "title"=>"Abbreviated User Name", "description"=>"NOTE: Once you have selected this option, you cannot change it back. User names are shown on the platform as first name + first initial (Jane D. instead of Jane Doe).", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "manual_tagging"=>{"type"=>"object", "title"=>"Manual Tagging", "description"=>"Allows to manually analyze text inputs", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "automatic_tagging"=>{"type"=>"object", "title"=>"Automatic Tagging", "description"=>"Allows to automatically analyze text inputs", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "idea_custom_copy"=>{"type"=>"object", "title"=>"Idea Custom Copy", "description"=>"Allows the changing of the word `idea` as the default term of input.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "idea_author_change"=>{"type"=>"object", "title"=>"Idea Author Change", "description"=>"Allows city admins to create ideas and assign users as their authors.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "private_projects"=>{"type"=>"object", "title"=>"Private projects", "description"=>"Make projects visible to certain groups only (Access Rights tab in the Admin panel).", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "events_page"=>{"type"=>"object", "title"=>"Events Page", "description"=>"Enables a Page where users can view future and past events happening across projects.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>false}, "navbar_link"=>{"$ref"=>"#/definitions/multiloc_string"}, "past_section_title"=>{"$ref"=>"#/definitions/multiloc_string"}, "future_section_title"=>{"$ref"=>"#/definitions/multiloc_string"}}}, "fragments"=>{"type"=>"object", "title"=>"Fragments", "description"=>"Internal system to allow specific pieces of UI to be overridden with custom HTML.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["enabled_fragments"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}, "enabled_fragments"=>{"title"=>"Enabled Fragments", "type"=>"array", "default"=>[], "description"=>"List of fragment names that should be enabled (e.g., 'signed-out-header').", "items"=>{"type"=>"string"}}}}, "project_visibility"=>{"type"=>"object", "title"=>"Project Visibility", "description"=>"Admin can make projects visible only to certain groups of users (e.g., admin only, smart groups).", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "user_confirmation"=>{"type"=>"object", "title"=>"User Account Confirmation", "description"=>"Add email confirmation functionality to users.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "custom_idea_statuses"=>{"type"=>"object", "title"=>"Custom Idea Statuses", "description"=>"Allows admin to define custom idea statuses.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "custom_maps"=>{"type"=>"object", "title"=>"Custom Map Configuration", "description"=>"Adds an extra tab to the project settings where admins can customize the project map.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "custom_style"=>{"type"=>"object", "title"=>"Custom style", "description"=>"Admins can specify additional styling options.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "custom_topics"=>{"type"=>"object", "title"=>"Custom Topics", "description"=>"Admin and project managers can customize idea topics.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "flag_inappropriate_content"=>{"type"=>"object", "title"=>"Flag Inappropriate Content", "description"=>"Automatically detect inappropriate content posted to the platform using Natural Language Processing.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "geographic_dashboard"=>{"type"=>"object", "title"=>"Geographic Dashboard", "description"=>"Shows a map with automatically detected idea locations. PoC, not yet stable.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "google_tag_manager"=>{"type"=>"object", "title"=>"Google Tag Manager Integration", "description"=>"Enables integrating to google tag manager\n", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "destinations"=>{:type=>"string", :description=>"As more tools can be activated through GTM, here you can specify them using comma separated text, shown in the cookie consent"}, "container_id"=>{:type=>"string", :description=>"The unique ID of your GTM workspace, format GTM-XXXXXXX", :pattern=>"^GTM-[A-Z0-9]{1,7}$", :default=>"GTM-KBM5894"}, "category"=>{:type=>"string", :description=>"In which category should GTM appear in the consent manager ?", :enum=>["advertising", "analytics", "functional"], :default=>"analytics"}}}, "granular_permissions"=>{"type"=>"object", "title"=>"Granular Permissions", "description"=>"Admin can specify permissions for specific projects and project phases (e.g., who can post, vote, etc.).", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "franceconnect_login"=>{"type"=>"object", "title"=>"FranceConnect Login", "description"=>"Allow users to authenticate and verify with a FranceConnect account.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["environment", "identifier", "secret"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "environment"=>{:type=>"string", :title=>"Environment", :description=>"Live on the production FranceConnect environment or still testing on their integration environment?", :enum=>["production", "integration"], :default=>"production", :private=>true}, "identifier"=>{:title=>"Identifier", :type=>"string", :private=>true}, "secret"=>{:title=>"Secret Key", :type=>"string", :private=>true}}}, "idea_assignment"=>{"type"=>"object", "title"=>"Assign Ideas", "description"=>"Ideas can be assigned to specific admin and project managers to respond to.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "insights_manual_flow"=>{"type"=>"object", "title"=>"Manual insights flow", "description"=>"[WARNING: experimental - do not enable this feature on production platforms] Manual reporting flow: from inputs to insights", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>false}, "enabled"=>{"type"=>"boolean", "default"=>false}}}, "machine_translations"=>{"type"=>"object", "title"=>"Machine Translations", "description"=>"Allows users to see translated content.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "matomo"=>{"type"=>"object", "title"=>"Matomo Integration", "description"=>"Enables sending front-end events to matomo for analytics\n", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "tenant_site_id"=>{:type=>"string", :description=>"The unique ID of the matomo site tracking this tenant.", :default=>"28"}, "product_site_id"=>{:type=>"string", :description=>"The unique ID of the matomo site tracking this tenant for product analytics", :default=>"21"}}}, "moderation"=>{"type"=>"object", "title"=>"Moderation", "description"=>"Moderations are pieces of user-generated content that need to be moderated.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "project_folders"=>{"type"=>"object", "title"=>"Project Folders", "description"=>"Allow project folders.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "project_management"=>{"type"=>"object", "title"=>"Project Managers", "description"=>"Enable the project manager role (users who have some administrative rights at a project level).", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "smart_groups"=>{"type"=>"object", "title"=>"Smart Groups", "description"=>"Users can automatically be assigned to a group based on certain criteria.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "user_custom_fields"=>{"type"=>"object", "title"=>"Custom Registration Fields", "description"=>"Allow admins to define custom registration fields.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}}}, "verification"=>{"type"=>"object", "title"=>"Verification", "description"=>"Use a pre-defined list to verify user identities during registration.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["verification_methods"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "verification_methods"=>{:title=>"Verification Methods", :private=>true, :type=>"array", :default=>[], :items=>{:anyOf=>[{:type=>"object", :title=>"auth0", :required=>["name", :client_id, :client_secret, :domain, :method_name_multiloc], :properties=>{:name=>{:type=>"string", :enum=>["auth0"], :default=>"auth0", :readOnly=>true}, :client_id=>{:type=>"string", :private=>"true"}, :client_secret=>{:type=>"string", :private=>"true"}, :domain=>{:type=>"string", :private=>"true"}, :method_name_multiloc=>{:$ref=>"#/definitions/multiloc_string", :private=>true}}}, {:type=>"object", :title=>"bogus", :required=>["name"], :properties=>{:name=>{:type=>"string", :enum=>["bogus"], :default=>"bogus", :readOnly=>true}}}, {:type=>"object", :title=>"bosa_fas", :required=>["name", :environment, :identifier, :secret], :properties=>{:name=>{:type=>"string", :enum=>["bosa_fas"], :default=>"bosa_fas", :readOnly=>true}, :environment=>{:type=>"string", :private=>"true"}, :identifier=>{:type=>"string", :private=>"true"}, :secret=>{:type=>"string", :private=>"true"}}}, {:type=>"object", :title=>"clave_unica", :required=>["name", :client_id, :client_secret], :properties=>{:name=>{:type=>"string", :enum=>["clave_unica"], :default=>"clave_unica", :readOnly=>true}, :client_id=>{:type=>"string", :private=>"true"}, :client_secret=>{:type=>"string", :private=>"true"}}}, {:type=>"object", :title=>"cow", :required=>["name", :api_username, :api_password, :rut_empresa], :properties=>{:name=>{:type=>"string", :enum=>["cow"], :default=>"cow", :readOnly=>true}, :api_username=>{:type=>"string", :private=>"true"}, :api_password=>{:type=>"string", :private=>"true"}, :rut_empresa=>{:type=>"string", :private=>"true"}}}, {:type=>"object", :title=>"franceconnect", :required=>["name"], :properties=>{:name=>{:type=>"string", :enum=>["franceconnect"], :default=>"franceconnect", :readOnly=>true}}}, {:type=>"object", :title=>"gent_rrn", :required=>["name", :api_key, :environment, :custom_field_key, :wijk_mapping], :properties=>{:name=>{:type=>"string", :enum=>["gent_rrn"], :default=>"gent_rrn", :readOnly=>true}, :api_key=>{:type=>"string", :private=>"true"}, :environment=>{:type=>"string", :enum=>["dv", "qa", "production"], :private=>true}, :custom_field_key=>{:type=>"string", :description=>"The key of the custom field that stores the \"wijk\"", :private=>true}, :wijk_mapping=>{:type=>"object", :description=>"Maps wijknummers (see https://data.stad.gent/explore/dataset/stadswijken-gent/table/) to custom_field_value keys", :properties=>{"1"=>{:type=>"string"}, "2"=>{:type=>"string"}, "3"=>{:type=>"string"}, "4"=>{:type=>"string"}, "5"=>{:type=>"string"}, "6"=>{:type=>"string"}, "7"=>{:type=>"string"}, "8"=>{:type=>"string"}, "9"=>{:type=>"string"}, "10"=>{:type=>"string"}, "11"=>{:type=>"string"}, "12"=>{:type=>"string"}, "13"=>{:type=>"string"}, "14"=>{:type=>"string"}, "15"=>{:type=>"string"}, "16"=>{:type=>"string"}, "17"=>{:type=>"string"}, "18"=>{:type=>"string"}, "19"=>{:type=>"string"}, "20"=>{:type=>"string"}, "21"=>{:type=>"string"}, "22"=>{:type=>"string"}, "23"=>{:type=>"string"}, "24"=>{:type=>"string"}}, :additionalProperties=>false, :private=>true}}}, {:type=>"object", :title=>"id_card_lookup", :required=>["name", :method_name_multiloc, :card_id_multiloc, :card_id_tooltip_multiloc, :card_id_placeholder, :explainer_image_url], :properties=>{:name=>{:type=>"string", :enum=>["id_card_lookup"], :default=>"id_card_lookup", :readOnly=>true}, :method_name_multiloc=>{:$ref=>"#/definitions/multiloc_string", :private=>true}, :card_id_multiloc=>{:$ref=>"#/definitions/multiloc_string", :private=>true}, :card_id_tooltip_multiloc=>{:$ref=>"#/definitions/multiloc_string", :private=>true}, :card_id_placeholder=>{:type=>"string", :private=>"true"}, :explainer_image_url=>{:type=>"string", :private=>"true"}}}]}}}}, "dummy_feature"=>{"type"=>"object", "title"=>"Dummy feature", "description"=>"Oh my... such a good feature.", "additionalProperties"=>false, "required"=>["allowed", "enabled"], "required-settings"=>["dummy setting"], "properties"=>{"allowed"=>{"type"=>"boolean", "default"=>true}, "enabled"=>{"type"=>"boolean", "default"=>true}, "dummy setting"=>{"type"=>"boolean"}}}}, "dependencies"=>{"typeform_surveys"=>["surveys"], "google_forms_surveys"=>["surveys"], "enalyzer_surveys"=>["surveys"], "survey_xact_surveys"=>["surveys"], "surveymonkey_surveys"=>["surveys"], "qualtrics_surveys"=>["surveys"], "automatic_tagging"=>["manual_tagging"], "flag_inappropriate_content"=>["moderation"]}, "definitions"=>{"multiloc_string"=>{"type"=>"object", "additionalProperties"=>false, "properties"=>{"en"=>{"type"=>"string"}, "ar-SA"=>{"type"=>"string"}, "en-GB"=>{"type"=>"string"}, "en-CA"=>{"type"=>"string"}, "nl-BE"=>{"type"=>"string"}, "nl-NL"=>{"type"=>"string"}, "fr-BE"=>{"type"=>"string"}, "fr-FR"=>{"type"=>"string"}, "de-DE"=>{"type"=>"string"}, "it-IT"=>{"type"=>"string"}, "da-DK"=>{"type"=>"string"}, "nb-NO"=>{"type"=>"string"}, "es-ES"=>{"type"=>"string"}, "es-CL"=>{"type"=>"string"}, "pl-PL"=>{"type"=>"string"}, "hu-HU"=>{"type"=>"string"}, "kl-GL"=>{"type"=>"string"}, "ro-RO"=>{"type"=>"string"}, "pt-BR"=>{"type"=>"string"}, "mi"=>{"type"=>"string"}, "sr-Latn"=>{"type"=>"string"}}}}}
  core settings
    require lifecycle stage

Idea
  feedback_needed
    should select ideas with no official feedback or no idea status change
  order_new
    sorts from new to old by default
    sorts from old to new when asking asc
    sorts from new to old when asking desc
  hooks
    should generate a slug on creation
    should set the author name on creation
  body
    is invalid if it has no true content
  order_status
    sorts from high status to low status when asked desc
  body sanitizer
    allows embedded youtube video's in the body
    sanitizes script tags in the body
  Default factory
    is valid
    can create an idea without author
  published at
    gets filled in when publishing a draft
    stays empty when creating a draft
    doesn't change again when already published once
    gets set immediately when creating a published idea
  idea_status
    gets set to proposed on creation when not set
  idea search
    should return results with exact prefixes
  title
    is stripped from spaces at beginning and ending
  associations
    is expected to have many votes
  delete an idea
    with an area should succeed
  order_popular
    sorts from popular to unpopular when asking desc
    sorts from popular to unpopular by default
    sorts from unpopular to popular when asking asc

Notifications::ThresholdReachedForAdmin
  make_notifications_on
    makes a notification on created comment activity

UserRoleService
  can_moderate_project?
    permits admins
    denies normal users
  moderatable_projects
    lists all projects for admins
    lists no projects for normal users
  moderators_for_project
    lists only project moderators and admins
  can_moderate?
    for an initiative
    for a comment
    for an idea
    for a project
  moderators_for
    lists all moderators of a comment
    lists all moderators of a project
    lists all moderators of an idea
    lists all moderators of an initiative

PublishActivityToRabbitJob
  #perform
    generates an event with the desired content

Invites
  when admin
    POST web_api/v1/invites/bulk_create
      
        [error] Bulk invite multiple users
      
        Bulk invite multiple users
    DELETE web_api/v1/invites/:id
      Delete an invite
    POST web_api/v1/invites/bulk_create_xlsx
      
        [error] Bulk invite users with xlsx file
      
        Bulk invite multiple users with xlsx file
    GET web_api/v1/invites/example_xlsx
      Get the example xlsx
    GET web_api/v1/invites/as_xlsx
      XLSX export
      
        [error] XLSX export by a normal user
    GET web_api/v1/invites
      
        List all invites
      
        Search for invites
      
        List all invites by combining filter, sort and search
      
        List all invites sorted by email
      
        List all invites that have been accepted
  When not authenticated
    POST web_api/v1/invites/by_token/:token/accept
      [error] Accept an invite with an invalid token
      [error] Accept an invitation twice
      Accept an invite
      
        Accept an invite using different capitalization for the email

IdeaVotePolicy
  for a mortal user on a vote of another user
    is expected not to permit :destroy
    is expected not to permit :down
    is expected not to permit :create
    is expected not to permit :up
    does not index the vote
    is expected not to permit :show
  for a visitor
    is expected not to permit :show
    is expected not to permit :create
    does not index the vote
    is expected not to permit :destroy
    is expected not to permit :down
    is expected not to permit :up
  for a mortal user who owns the vote
    is expected to permit :up
    is expected to permit :show
    indexes the vote
    is expected to permit :destroy
    is expected to permit :down
    is expected to permit :create
  for a mortal user who owns the vote on an idea in a project where voting is disabled
    is expected to raise Pundit::NotAuthorizedError
    is expected to permit :show
    is expected to raise Pundit::NotAuthorizedError
    is expected to raise Pundit::NotAuthorizedError
    indexes the vote
    is expected to raise Pundit::NotAuthorizedError
  for a mortal user who owns the vote on an idea in a private groups project where she's not member of a manual group with access
    is expected to permit :show
    is expected to raise Pundit::NotAuthorizedError
    indexes the vote
    is expected to raise Pundit::NotAuthorizedError
    is expected to raise Pundit::NotAuthorizedError
    is expected to raise Pundit::NotAuthorizedError
  for an admin
    is expected to permit :show
    is expected not to permit :down
    is expected not to permit :create
    indexes the vote
    is expected not to permit :destroy
    is expected not to permit :up

WebApi::V1::InitiativeSerializer
  with 'abbreviated user names' enabled
    should abbreviate the author name
    should not abbreviate user names for admins

PublishGenericEventToRabbitJob
  #perform
    actually publishes the event to RabbitMQ

RequiredSettingsAttribute
  validates an object that has the required setting but is not enabled
  invalidates an object that misses the required setting
  validates an object that misses the required setting but is not enabled
  validates an object that has the required setting but is not allowed
  validates an object that misses the required setting but is not allowed
  validates an object that has the required setting

SideFxParticipationContextService
  after_update
    is expected to have enqueued job
  after_create
    is expected to have enqueued job
  before_destroy
    is expected to have enqueued job

google authentication
I, [2021-09-14T10:29:27.072907 #1]  INFO -- omniauth: (google) Setup endpoint detected, running now.
I, [2021-09-14T10:29:27.099616 #1]  INFO -- omniauth: (google) Setup endpoint detected, running now.
  successfully authenticates an existing user
I, [2021-09-14T10:29:27.859368 #1]  INFO -- omniauth: (google) Setup endpoint detected, running now.
I, [2021-09-14T10:29:27.875818 #1]  INFO -- omniauth: (google) Setup endpoint detected, running now.
  successfully registers an invitee
I, [2021-09-14T10:29:28.434023 #1]  INFO -- omniauth: (google) Setup endpoint detected, running now.
I, [2021-09-14T10:29:28.448879 #1]  INFO -- omniauth: (google) Setup endpoint detected, running now.
  updates the avatar when re-authenticating an existing user with an avatar
I, [2021-09-14T10:29:28.836733 #1]  INFO -- omniauth: (google) Setup endpoint detected, running now.
I, [2021-09-14T10:29:28.852057 #1]  INFO -- omniauth: (google) Setup endpoint detected, running now.
  successfully registers a new user

MultilocValidator
  with nil values for some locales
    is invalid
  with an empty locale value
    is valid when presence: false option is set
    is invalid when presence: true option is set
  with unsupported languages
    is invalid
  without nil values
    is valid
  with a nil locale value
    is valid when presence: false option is set
    is invalid when presence: true option is set
  with one locale value
    is valid
  with right length
    is valid when too long
  with wrong length
    is invalid when out of range
    is invalid when wrong length
    is invalid when too long

PermissionsService
  #denied?
    returns `not_signed_in` when user needs to be signed in
    returns nil when action is allowed
    returns `not_permitted` when user is not in authorized groups

MentionService
  users_from_post
    handles case gracefully
    return the users from the idea that match the slug
  extract_mentions
    returns a mention when it's in most common firstname-lastname form
    returns an empty array when there's a standalone @ sign
    return an empty array when there's no mention
    returns an empty array when there's a an @ with less than 3 following chars
    returns multiple valid mentions
    returns no mention when there's no dash in it
    returns a mention when it's got more than 2 segments
  with shallow anonymization enabled
    adds a span tag
    extract expanded mentions
  add_span_around
    Adds a span tag
  remove_expanded_mentions
    removes the expanded mentions
  process_mentions
    processes a single mention as it should
    returns the same text when there's no mention
    processes multiple mentions as it should
    only returns new unexpanded mentions as users

IdeaFile
  POST web_api/v1/ideas/:idea_id/files
    Add a file attachment to an idea
  GET web_api/v1/ideas/:idea_id/files
    List all file attachments of an idea
  DELETE web_api/v1/ideas/:idea_id/files/:file_id
    Delete a file attachment from an idea
  GET web_api/v1/ideas/:idea_id/files/:file_id
    Get one file attachment of an idea by id

GroupsProjects
  when authenticated
    GET web_api/v1/groups_projects/:id
      Get one groups-project by id
    POST web_api/v1/projects/:project_id/groups_projects
      Add a groups-project
    DELETE web_api/v1/groups_projects/:id
      Delete a groups-project
    GET web_api/v1/projects/:project_id/groups_projects
      List all groups-projects of a project
      List all groups-projects sorted by new

InitiativeStatuses
  GET web_api/v1/initiative_statuses
    List all initiative statuses
  GET web_api/v1/initiative_statuses/:id
    Get one initiative status by id

InitiativeStatusChange
  GET web_api/v1/initiatives/:initiative_id/initiative_status_changes
    List all status changes of an initiative
  GET web_api/v1/initiative_status_changes/:id
    Get one status changes on an initiative by id
  when authenticated
    POST web_api/v1/initiatives/:initiative_id/initiative_status_changes
      Create a status change on an initiative with new feedback
      
        [error] Create a status change on an initiative without feedback
      
        [error] Create a status change through an invalid transition
      
        [error] Create a status change to the same status
      
        Create a status change on an initiative using an existing feedback
  when authenticated as normal user
    POST web_api/v1/initiatives/:initiative_id/initiative_status_changes
      [error] Create an official feedback on an initiative

AvatarsService
  avatars_for_project
    returns the idea authors in a project
    doesn't return the same user twice
  avatars_for_idea
    returns the idea and comments authors
    does not include authors from deleted comments
    doesn't return the same user twice
    does not return the voters

Initiative
  title
    is stripped from spaces at beginning and ending
  slug
    is set properly upon publication
  associations
    is expected to have many votes
  body sanitizer
    sanitizes script tags in the body
  order_status
    shows proposed initiatives first, where the ones which will soon expire are shown at the top
  published at
    gets filled in when publishing a draft
    stays empty when creating a draft
    doesn't change again when already published once
    gets set immediately when creating a published idea
  Default factory
    is valid
  hooks
    should generate a slug on creation
    should set the author name on creation

Stats - Comments
  GET web_api/v1/stats/comments_by_topic
    when normal user
      unauthorized
    when admin
      filtered by group
        Comments by topic filtered by group
      filtered by project
        Comments by topic filtered by project
      with time filtering only
        Comments by topic
      without time filters
        Comments by topic
    when visitor
      unauthorized
  GET web_api/v1/stats/comments_by_project_as_xlsx
    when admin
      with time filtering only
        Comments by project
      filtered by group
        Comments by project filtered by group
      filtered by topic
        Comments by project filtered by topic
    when normal user
      unauthorized
    when visitor
      unauthorized
  with activity over time
    GET web_api/v1/stats/comments_by_time_cumulative_as_xlsx
      as a moderator
        Count all comments filtered by project
      when normal user
        unauthorized
      when admin
        with time filter outside of platform lifetime
          returns no entries
        with time filter
          Comments by time (cumulative)
      when visitor
        unauthorized
    GET web_api/v1/stats/comments_by_time
      when admin
        with time filter
          Comments by time
        with time filter outside of platform lifetime
          returns no entries
      when normal user
        unauthorized
      when visitor
        unauthorized
    GET web_api/v1/stats/comments_by_time_as_xlsx
      when admin
        with time filter
          Comments by time
        with time filter outside of platform lifetime
          returns no entries
      when visitor
        unauthorized
      when normal user
        unauthorized
    GET web_api/v1/stats/comments_by_time_cumulative
      when admin
        with time filter
          Comments by time (cumulative)
        with time filter outside of platform lifetime
          returns no entries
      when visitor
        unauthorized
      when normal user
        unauthorized
      as a moderator
        Count all comments filtered by project
  GET web_api/v1/stats/comments_by_topic_as_xlsx
    when normal user
      unauthorized
    when admin
      without time filters
        Comments by topic
      filtered by group
        Comments by topic filtered by group
      with time filtering only
        Comments by topic
      filtered by project
        Comments by topic filtered by project
    when visitor
      unauthorized
  GET web_api/v1/stats/comments_by_project
    when admin
      filtered by group
        Comments by project filtered by group
      filtered by topic
        Comments by project filtered by topic
      with time filtering only
        Comments by project
    when normal user
      unauthorized
    when visitor
      unauthorized
  GET web_api/v1/stats/comments_count
    as a moderator
      Count all comments (as a moderator)
    when visitor
      unauthorized
    when admin
      Count all comments
    when normal user
      unauthorized

EventsFinder
  #project_ids_condition
    is successful
    returns the correct records
  when no params or options are received
    is successful
    returns all
  #start_at_gteq_condition
    returns the correct records
    is successful
  #start_at_lt_condition
    is successful
    returns the past events

MultilocService
  t
    falls back to i18n locale when there's no user
    falls back to the first available translation when no tenant locale is available
    returns an empty string when that's what the translations define
    returns an empty string when no translation is defined
    picks the user locale from the translations when available
    falls back to the first available tenant locale when the translations don't contain the requested
    returns nil when the provided translations are nil
  is_empty?
    returns true on a multiloc with only empty values
    returns false on a multiloc with values
    returns true on a nil multiloc
  block_to_multiloc
    switches the i18n.locale in the given block
    assembles a multiloc object with a given block
  i18n_to_multiloc
    returns missing strings for a missing translation key
    assembles a multiloc object for a given translation key
    supports setting the returned locales explicitly

WebApi::V1::IdeaSerializer
  with 'abbreviated user names' enabled
    should abbreviate the author name
    should not abbreviate user names for admins

Topic
  Default factory
    is valid

Notification
  Deleting stuff related to notifications works when
    deleting initiator of comment on your comment notification
    deleting recipient of comment on your comment notification
    deleting initiator of notification
    deleting spam report of comment on your comment notification
    deleting parent of comment of comment on your idea notification
    deleting spam report of comment on your idea notification
    deleting recipient of comment marked as spam notification
    deleting recipient of comment on your idea notification
    deleting initiator of comment on your idea notification
    deleting idea of comment on your comment notification
    deleting parent of comment of notification
    deleting idea of comment marked as spam notification
    deleting spam report of comment marked as spam notification
    deleting project of comment marked as spam notification
    deleting parent of comment of comment on your comment notification
    deleting recipient of notification
    deleting project of comment on your comment notification
    deleting spam report of notification
    deleting initiator of comment marked as spam notification
    deleting idea of notification
    deleting idea of comment on your idea notification
    deleting parent of comment of comment marked as spam notification
    deleting comment of notification
    deleting project of notification
    deleting project of comment on your idea notification

Notifications::StatusChangeOfYourInitiative
  make_notifications_on
    makes a notification on created comment activity

Users
  when not authenticated
    GET web_api/v1/users/:id
      Get a non-authenticated user does not expose the email
    GET web_api/v1/users/me
      [error] Get the authenticated user
    POST web_api/v1/user_token
      with phone password_login turned off
        Authenticate a registered user
        [error] Authenticate an invited user
      with phone password_login turned on
        
          Authenticate a registered user by phone number
        
          Authenticate a registered user by email
    GET web_api/v1/users/as_xlsx
      [error] XLSX export
    POST web_api/v1/users
      Create a user
      
        [error] Create an invalid user
      Creating an admin user
        creates a user, but not an admin
      
        [error] Registering a user with case insensitive email duplicate
      with phone password_login turned on
        
          Register with email when an email is passed
        
          Registers a user with a phone number in the email when a phone number is passed
      
        [error] Registering an invited user
      when the user_confirmation module is active
        Registration is not completed by default
        Sends a confirmation email
        Requires confirmation
    GET web_api/v1/users
      [error] List all users
  when authenticated
    GET web_api/v1/users/:id/ideas_count
      Get the number of ideas published by one user
    GET web_api/v1/users/me
      Get the authenticated user
    GET web_api/v1/users
      Get all users as non-admin
    POST web_api/v1/users/complete_registration
      [error] Complete the registration of a user fails if the user has already completed signup
      [error] Complete the registration of a user fails if not all required fields are provided
      Complete the registration of a user
      
        Can't change some custom_field_values of a user verified with FranceConnect
    GET web_api/v1/users/:id/initiatives_count
      Get the number of initiatives published by one user
    DELETE web_api/v1/users/:id
      Delete a user
    GET web_api/v1/users/:id
      Get one user by id
    GET web_api/v1/users/:id
      Get the authenticated user exposes the email field
    PUT web_api/v1/users/:id
      
        Cannot modify values of disabled custom fields
        Clear out a user's custom field value
        Cannot modify values of hidden custom fields
        Update a user's custom field values
      
        Remove user as assignee when losing admin rights
      
        Can't change some attributes of a user verified with FranceConnect
      
        Update a user
      
        Make a user admin, as an admin
      
        The user avatar can be removed
    GET web_api/v1/users/by_invite/:token
      Get a user by invite
      
        [error] Get an unexisting user by invite token
    GET web_api/v1/users/by_slug/:slug
      Get one user by slug
      
        [error] Get an unexisting user by slug
    GET web_api/v1/users/:id/comments_count
      Get the number of comments posted by one user
      Get the number of comments on ideas posted by one user
      Get the number of comments on initiatives posted by one user
    when admin
      GET web_api/v1/users/as_xlsx
        XLSX export
        
          XLSX export all users given a list of user ids
        
          XLSX export all users from a group
        
          XLSX export all users by filtering on both group and user ids
      GET web_api/v1/users
        List all users who can moderate
        Search for users with sort parameter
        List all users sorted by last_name
        List all admins
        List all users who can moderate a project
        List all users
        List all users in group
        List all users in group, ordered by role
        Get all users on the second page with fixed page size
        Search for users
        List all users in group
          with correct pagination

AppConfigurations
  PATCH web_api/v1/app_configuration
    Update the app configuration
    
      [error] Updating the configuration with unsupported features fails
    
      [error] Updating the configuration with unsupported settings fails
    
      The favicon can be removed
    
      The logo can be removed
    
      The header image can be removed
  GET web_api/v1/app_configuration
