# Usage:
#
# Dry run: rake single_use:add_layout_to_community_monitor_reports
# Execute: rake single_use:add_layout_to_community_monitor_reports[execute]
namespace :single_use do
  desc 'Add layout to community monitor reports'
  task :add_layout_to_community_monitor_reports, %i[execute] => [:environment] do |_t, args|
    execute = args[:execute] == 'execute'

    Tenant.safe_switch_each do |tenant|
      puts "\nProcessing tenant #{tenant.host} \n\n"

      app_config = AppConfiguration.instance

      # Step 1: get all community monitor autogenerate reports
      community_monitor_project_id = app_config.settings.dig('community_monitor', 'project_id')
      community_monitor_phase = Phase.find_by(project_id: project_id)

      if community_monitor_phase.nil?
        puts "community_monitor_project_id: #{community_monitor_project_id}"
        raise "Community monitor phase not found"
      end

      community_monitor_autogenerated_reports = ReportBuilder::Report.find_by(
        phase_id: community_monitor_phase.id
      )

      if community_monitor_autogenerated_reports.empty?
        puts "No community monitor autogenerated reports found"
        next
      end

      # Step 2: confirm that all these reports do not have a layout,
      # and add a layout
      community_monitor_autogenerated_reports.each do |report|
        if report.layout.present?
          raise "Report #{report.id} already has a layout"
        else
          if execute
            report.layout = ContentBuilder::Layout.new(
              craftjs_json: {},
              enabled: true,
              code: 'report'
            )
            report.save!
            puts "Added layout to report #{report.id}"
          else
            puts "Would add layout to report #{report.id}"
          end
        end
      end
    end
  end
end