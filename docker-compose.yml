version: "3.8"

services:
  postgres:
    # When you update PostgreSQL, make sure to upgrade the `postgresql-client` version
    # in `Dockerfile` and `Dockerfile.development`. This ensures that `pg_dump` and
    # `psql` versions stay in sync with the PostgreSQL version, reducing the risk of
    # incompatibilities.
    image: "postgis/postgis:15-3.4"
    # From https://www.postgresql.org/docs/current/non-durability.html
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - "postgres:/var/lib/postgresql/data"

  web:
    container_name: cl-back-web
    depends_on:
      - "postgres"
      - "mailcatcher"
      - "rabbitmq"
      # - 'memcached'
    build:
      context: .
      dockerfile: back/Dockerfile.development
    ports:
      - "4000:4000"
    volumes:
      - "./back:/cl2_back"
      - bundle_path:/bundle
    env_file:
      - "env_files/back-safe.env"
      - "env_files/back-secret.env"
    environment:
      BUNDLE_PATH: /bundle
    tty: true
    stdin_open: true

  que:
    container_name: cl-que
    depends_on:
      - "postgres"
      - "mailcatcher"
      - "rabbitmq"
    build:
      context: .
      dockerfile: back/Dockerfile.development
    command: bundle exec que
    volumes:
      - "./back:/cl2_back"
      - bundle_path:/bundle
    env_file:
      - "env_files/back-safe.env"
      - "env_files/back-secret.env"
    environment:
      BUNDLE_PATH: /bundle
    tty: true
    stdin_open: true

  rabbitmq:
    container_name: cl-back-rabbit
    image: "rabbitmq:3.8-management"
    ports:
      - "8088:15672"
    volumes:
      - "./back/rabbitmq_enabled_plugins:/etc/rabbitmq/enabled_plugins"

  mailcatcher:
    image: "schickling/mailcatcher"
    ports:
      - "1080:1080"

  # Include this and uncomment :mem_cache_store in
  # `config/environments/development.rb` if you want to enable caching in
  # development
  # memcached:
  #   image: memcached:alpine
  #   command: memcached -m 64

  # Open API documentation - Only starts if you run docker compose --profile openapi up
  openapi:
    container_name: cl-open-api
    image: swaggerapi/swagger-ui
    ports:
      - 8080:8080
    volumes:
      - ./back/doc/public_api:/usr/share/nginx/html/doc
    environment:
      URLS: "[{ url: 'doc/open_api.json', name: 'Public API'}]"
    profiles:
      - openapi

volumes:
  postgres:
  bundle_path:

networks:
  default:
    name: citizenlab
