version: 2.1

parameters:

  citizenlab_branch:
    type: string
    default: master

  citizenlab_sha:
    type: string
    default: ""

  run_deploy:
    type: boolean
    default: false

  image_tag:
    type: string
    default: ""

executors:
  cl2-back:
    parameters:
      image-tag:
        type: string
    docker:
      - image: citizenlabdotco/back-ee:<< parameters.image-tag >>
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
      - image: 'postgis/postgis:12-3.1'
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

commands:
  wait-for-postgres:
    steps:
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

jobs:
  # *************** back ***************
  
  back-build-ee-docker-image:
    working_directory: /
    docker:
      - image: docker:stable-git
    steps:
      - checkout:
          path: /citizenlab-ee

      - add_ssh_keys:
          fingerprints:
            - "94:9a:7c:8d:50:73:cc:28:06:47:d7:98:91:0b:00:ff"
      - run: |
          git clone git@github.com:CitizenLabDotCo/citizenlab /citizenlab
          cd /citizenlab
          git checkout << pipeline.parameters.citizenlab_branch >>

      - run: |
          cd /citizenlab-ee && sh scripts/enable_ee.sh

      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          docker build -t citizenlabdotco/back-ee:<< pipeline.parameters.citizenlab_sha >>-$CIRCLE_SHA1 -f /citizenlab/back/Dockerfile /citizenlab/.
      - run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push citizenlabdotco/back-ee:<< pipeline.parameters.citizenlab_sha >>-$CIRCLE_SHA1

  back-test:
    resource_class: small
    executor:
      name: cl2-back
      image-tag: << pipeline.parameters.citizenlab_sha >>-$CIRCLE_SHA1
    working_directory: /cl2_back
    parallelism: 4
    environment:
      RAILS_ENV: test
      CITIZENLAB_EE: true
    steps:
      - wait-for-postgres
      - run: |
          rake db:create
          rake db:schema:load
      - run: |
          TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" "engines/*/*/spec/**/*_spec.rb" | circleci tests split  --split-by=timings)
          echo $TESTFILES
          bundle exec rspec --format documentation --format RspecJunitFormatter -o spec/reports/rspec.xml -- ${TESTFILES}
      - store_test_results:
          path: spec/reports

  back-slow-tests:
    resource_class: small
    executor:
      name: cl2-back
      image-tag: << pipeline.parameters.citizenlab_sha >>-$CIRCLE_SHA1
    working_directory: /cl2_back
    environment:
      RAILS_ENV: test
      CITIZENLAB_EE: true
    steps:
      - wait-for-postgres
      - run: |
          rake db:create
          rake db:schema:load
      - run: |
          bundle exec rspec --format documentation --format RspecJunitFormatter -o spec/reports/rspec.xml -t slow_test
      - store_test_results:
          path: spec/reports

  trigger-deploy:
    resource_class: small
    docker:
      - image: byrnedo/alpine-curl
    steps:
      - when:
          condition:
            equal: [<<pipeline.parameters.citizenlab_branch>>, "master"]
          steps:
            - run: |
                curl --request POST \
                  -u $CIRCLECI_API_TOKEN: \
                  --url https://circleci.com/api/v2/project/github/CitizenLabDotCo/citizenlab-ee/pipeline \
                  --header 'content-type: application/json' \
                  --header 'x-attribution-login: $CIRCLE_USERNAME' \
                  --data '{"branch":"$CIRCLE_BRANCH","parameters":{"image_tag": "<< pipeline.parameters.citizenlab_sha >>-$CIRCLE_SHA1", "run_deploy": true}}'

  back-push-deployment-docker-image:
    resource_class: small
    docker:
      - image: docker:stable-git
    steps:
      - setup_remote_docker
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker pull citizenlabdotco/back-ee:<< pipeline.parameters.image_tag >>
      - run: docker tag citizenlabdotco/back-ee:<< pipeline.parameters.image_tag >> citizenlabdotco/back-ee:$CIRCLE_BRANCH
      - deploy:
          command: docker push citizenlabdotco/back-ee:$CIRCLE_BRANCH

workflows:
  version: 2

  back:
    when:
      not: <<pipeline.parameters.run_deploy>>
    jobs:
      - back-build-ee-docker-image:
          context: docker-hub-access
      - back-test:
          context: docker-hub-access
          requires:
            - back-build-ee-docker-image
      - back-slow-tests:
          context: docker-hub-access
          requires:
            - back-build-ee-docker-image
          filters:
            branches:
              only:
                - master
                - production
      - trigger-deploy:
          context: circleci-api-token
          requires:
            - back-test
            - back-slow-tests
          filters:
            branches:
              only:
                - master
                - production

  deploy:
    when: <<pipeline.parameters.run_deploy>>
    jobs:
      - back-push-deployment-docker-image:
          context: docker-hub-access
          filters:
            branches:
              only:
                - master
                - production
